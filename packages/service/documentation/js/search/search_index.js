var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddGoodsDto.html",[0,0.161,1,1.994]],["body/classes/AddGoodsDto.html",[0,0.217,1,2.677,2,0.029,3,0.291,4,0.256,5,2.75,6,2.828,7,4.3,8,4.3,9,4.3,10,4.3,11,4.3,12,1.534,13,4.491,14,3.266,15,3.266,16,3.627,17,3.266,18,5.107,19,3.266,20,3.266,21,2.41,22,4.476,23,2.677,24,3.303,25,3.266,26,0.327,27,4.476,28,2.156,29,0.291,30,3.266,31,3.266,32,3.266]],["title/entities/Admin.html",[33,1.233,34,1.822]],["body/entities/Admin.html",[0,0.202,2,0.028,3,0.371,4,0.327,21,3.076,26,0.576,29,0.371,33,1.944,34,2.871,35,3.51,36,3.8,37,5.246,38,3.51,39,5.089,40,3.878,41,4.169,42,3.143,43,1.931,44,3.51,45,2.639,46,3.51,47,3.51,48,2.277,49,4.169]],["title/controllers/AppController.html",[50,1.43,51,2.201]],["body/controllers/AppController.html",[0,0.211,2,0.028,3,0.389,4,0.342,6,1.874,12,1.397,26,0.542,29,0.389,50,2.322,51,3.573,52,1.874,53,3.679,54,5.175,55,4.37,56,0.834,57,3.517,58,4.37,59,2.613,60,1.739,61,4.37]],["title/modules/AppModule.html",[62,1.147,63,2.201]],["body/modules/AppModule.html",[0,0.121,2,0.028,3,0.223,4,0.196,23,2.913,26,0.617,29,0.223,48,1.369,51,1.654,52,1.075,56,0.478,57,1.498,60,1.475,62,1.517,63,3.965,64,1.717,65,2.11,66,2.11,67,3.255,68,3.255,69,3.255,70,2.505,71,2.505,72,3.705,73,5.199,74,2.505,75,2.505,76,1.849,77,3.705,78,2.505,79,3.705,80,4.409,81,2.11,82,1.849,83,2.505,84,1.849,85,1.369,86,2.216,87,2.505,88,2.446,89,2.505,90,1.654,91,2.505,92,2.505,93,2.505,94,2.505,95,2.505,96,2.505,97,2.11,98,2.11,99,1.849,100,2.734,101,2.446,102,2.505,103,2.505,104,2.505,105,2.505,106,2.505,107,2.734,108,2.505,109,2.505,110,2.505,111,2.505,112,2.505,113,2.11,114,2.505,115,2.505,116,1.161,117,3.705,118,2.11,119,1.849,120,2.505,121,2.505,122,1.849,123,2.505,124,2.505,125,1.654,126,3.705,127,1.258,128,2.505,129,1.849,130,2.505,131,2.505,132,2.505,133,2.505,134,2.505,135,2.505,136,2.505,137,1.849,138,2.505,139,2.505,140,2.505,141,2.11,142,2.505,143,2.505,144,2.505,145,2.11,146,1.369,147,1.849,148,2.505,149,2.505,150,2.505,151,2.11,152,2.505]],["title/injectables/AppService.html",[57,1.994,153,0.688]],["body/injectables/AppService.html",[0,0.221,2,0.028,3,0.407,4,0.358,12,1.436,26,0.457,29,0.407,54,5.257,56,0.873,57,3.328,60,1.819,153,1.149,154,3.849,155,4.572,156,4.572,157,4.572]],["title/controllers/AuthController.html",[50,1.43,158,2.201]],["body/controllers/AuthController.html",[0,0.238,2,0.028,3,0.438,4,0.386,26,0.493,29,0.438,50,2.112,52,2.112,56,0.94,158,3.841,159,4.146,160,4.924,161,4.924]],["title/modules/AuthModule.html",[62,1.147,162,2.201]],["body/modules/AuthModule.html",[0,0.208,2,0.028,3,0.383,4,0.337,26,0.584,29,0.383,52,2.299,56,0.821,62,1.844,64,2.483,146,2.35,158,3.854,162,4.233,163,3.621,164,3.621,165,3.835,166,4.301,167,4.301,168,4.301]],["title/injectables/AuthService.html",[153,0.688,165,1.994]],["body/injectables/AuthService.html",[0,0.24,2,0.028,3,0.442,4,0.389,26,0.497,29,0.442,56,0.949,153,1.208,165,3.498,169,4.184]],["title/injectables/ErrorService.html",[153,0.688,170,1.822]],["body/injectables/ErrorService.html",[0,0.168,2,0.029,3,0.308,4,0.271,12,0.894,16,3.475,24,4.334,26,0.466,29,0.308,48,1.893,56,0.661,60,1.379,153,0.962,170,2.545,171,4.74,172,2.556,173,3.884,174,5.264,175,2.876,176,4.659,177,3.437,178,4.659,179,4.659,180,3.464,181,3.464,182,2.556,183,3.922,184,2.287,185,2.287,186,2.287,187,3.464,188,3.464,189,3.464,190,3.464,191,3.464]],["title/entities/Goods.html",[33,1.233,192,1.822]],["body/entities/Goods.html",[0,0.173,2,0.029,3,0.317,4,0.279,7,4.497,8,4.497,9,4.497,10,4.497,11,4.497,12,1.633,16,3.76,26,0.357,29,0.317,33,1.757,42,3.9,43,1.652,192,2.595,193,3.003,194,5.341,195,3.566,196,3.505,197,3.566,198,3.566,199,3.566,200,3.566,201,3.566,202,2.632]],["title/controllers/GoodsController.html",[50,1.43,203,2.201]],["body/controllers/GoodsController.html",[0,0.122,1,3.375,2,0.029,3,0.225,4,0.198,6,1.082,12,1.527,26,0.489,29,0.225,50,1.082,52,1.082,56,0.482,59,1.509,60,2.172,175,2.419,192,1.378,203,2.458,204,2.124,205,2.419,206,4.427,207,3.724,208,3.724,209,4.116,210,3.136,211,3.136,212,2.523,213,4.594,214,2.124,215,2.523,216,3.724,217,1.665,218,2.523,219,3.724,220,2.523,221,3.263,222,2.523,223,2.648,224,2.523,225,3.724,226,2.523,227,2.124,228,3.724,229,2.523,230,2.124,231,4.116,232,3.724,233,2.523,234,2.748,235,3.727,236,1.509,237,2.523,238,3.136,239,2.124,240,1.862,241,2.124,242,2.035,243,2.124,244,2.523,245,2.523,246,2.523,247,2.124,248,1.665,249,2.523,250,2.523,251,2.523,252,2.523,253,2.523,254,2.523,255,2.523,256,2.523,257,2.523,258,2.523]],["title/modules/GoodsModule.html",[62,1.147,67,1.994]],["body/modules/GoodsModule.html",[0,0.199,2,0.028,3,0.365,4,0.322,26,0.621,29,0.365,52,2.233,56,0.784,62,1.791,64,2.412,67,3.79,84,3.029,85,2.243,101,2.71,146,2.243,192,2.243,203,3.773,242,3.462,243,3.457,259,3.457,260,3.457,261,4.106,262,4.106,263,3.457,264,4.106]],["title/injectables/GoodsService.html",[153,0.688,242,1.822]],["body/injectables/GoodsService.html",[0,0.094,1,3.186,2,0.029,3,0.172,4,0.152,6,1.305,12,1.415,26,0.533,29,0.172,43,0.896,56,0.369,60,2.232,85,1.057,116,2.383,153,0.628,173,2.244,175,2.053,177,1.427,184,1.277,185,1.277,186,1.277,192,1.057,205,2.911,209,3.587,210,2.561,211,2.561,213,4.331,221,2.548,223,1.819,227,2.561,230,2.561,231,3.587,236,2.77,241,1.629,242,1.662,248,3.057,263,1.629,265,1.629,266,3.758,267,1.934,268,3.144,269,3.164,270,2.139,271,1.934,272,3.041,273,1.934,274,1.934,275,3.041,276,4.139,277,4.815,278,3.041,279,1.934,280,2.244,281,1.934,282,1.934,283,1.934,284,1.629,285,1.629,286,1.277,287,1.427,288,1.427,289,1.934,290,3.057,291,4.632,292,3.041,293,1.934,294,3.164,295,4.632,296,3.041,297,1.934,298,3.041,299,1.934,300,1.934,301,3.041,302,1.934]],["title/entities/Guest.html",[33,1.233,303,1.674]],["body/entities/Guest.html",[0,0.181,2,0.028,3,0.333,4,0.293,21,2.758,26,0.581,29,0.333,33,1.812,36,3.609,38,3.147,39,4.885,40,3.616,42,2.93,43,1.732,44,3.147,45,2.46,46,3.147,47,3.147,48,2.042,303,2.745,304,3.147,305,4.603,306,3.377,307,3.738,308,4.9,309,3.738,310,5.072,311,3.738,312,4.9,313,2.758,314,3.738]],["title/modules/JwtAuthModule.html",[62,1.147,315,1.994]],["body/modules/JwtAuthModule.html",[0,0.193,2,0.028,3,0.356,4,0.313,26,0.565,29,0.356,56,0.764,62,1.761,64,2.372,101,2.64,146,2.185,315,3.827,316,3.368,317,3.368,318,3.368,319,3.648,320,2.951,321,2.392,322,4,323,4,324,2.951,325,2.951,326,3.368,327,4,328,4,329,4,330,4,331,3.368]],["title/injectables/JwtAuthService.html",[153,0.688,319,1.822]],["body/injectables/JwtAuthService.html",[0,0.196,2,0.029,3,0.252,4,0.222,6,1.215,12,1.544,26,0.473,29,0.361,56,0.541,59,1.694,60,1.612,107,2.09,116,1.312,153,0.836,205,3.103,236,2.422,276,4.191,290,2.674,319,2.983,320,3.808,321,3.086,324,3.489,332,2.384,333,3.411,334,4.051,335,4.051,336,4.051,337,2.832,338,5.161,339,2.832,340,3.411,341,4.051,342,2.832,343,4.191,344,2.989,345,4.051,346,2.832,347,4.051,348,3.411,349,3.411,350,4.051,351,3.411,352,4.051,353,2.832,354,2.674,355,2.832,356,2.832]],["title/injectables/LoggerMiddleware.html",[88,2.201,153,0.688]],["body/injectables/LoggerMiddleware.html",[0,0.157,2,0.029,3,0.396,4,0.254,26,0.574,29,0.288,56,0.849,76,2.388,88,2.937,100,2.388,116,1.5,147,2.388,151,3.746,153,0.918,223,1.936,234,2.388,354,3.355,357,2.725,358,3.746,359,3.746,360,5.473,361,3.751,362,4.608,363,4.608,364,3.237,365,2.725,366,3.746,367,2.937,368,4.449,369,6.073,370,5.473,371,2.725,372,3.237,373,3.237,374,3.237,375,2.725,376,2.725,377,3.237,378,3.237,379,5.083,380,3.237,381,3.237,382,3.237,383,3.237,384,3.237,385,3.237]],["title/entities/ReceivingAddress.html",[33,1.233,306,1.822]],["body/entities/ReceivingAddress.html",[0,0.175,2,0.028,3,0.322,4,0.283,12,1.478,23,3.424,26,0.48,29,0.322,33,1.772,42,3.215,43,1.674,196,3.536,202,2.667,221,3.215,223,2.866,303,3.074,306,2.618,386,4.821,387,3.043,388,3.967,389,3.967,390,3.614,391,3.614,392,3.614,393,4.792,394,4.792,395,5.726,396,4.792,397,4.792,398,3.614,399,4.792,400,3.614,401,3.614]],["title/modules/ResponseModule.html",[62,1.147,68,1.994]],["body/modules/ResponseModule.html",[0,0.187,2,0.028,3,0.343,4,0.302,26,0.555,29,0.343,56,0.737,62,1.721,64,2.317,68,3.922,146,2.108,170,3.63,270,3.336,286,3.302,331,3.248,361,2.846,402,3.248,403,3.248,404,3.248,405,2.846,406,3.858,407,5.002,408,3.248]],["title/injectables/ResponseService.html",[153,0.688,270,1.674]],["body/injectables/ResponseService.html",[0,0.114,2,0.029,3,0.21,4,0.185,6,1.014,12,0.61,24,3.143,26,0.474,29,0.21,48,1.938,56,0.451,59,1.414,60,1.884,113,2.987,116,1.095,153,0.732,170,2.586,172,1.744,175,3.176,182,2.618,184,3.125,185,1.56,186,1.56,205,2.327,217,1.56,236,3.034,270,1.781,286,1.56,287,1.744,288,1.744,290,2.812,348,3.586,354,2.342,371,3.586,375,1.99,376,2.987,405,3.743,408,1.99,409,5.328,410,3.548,411,2.364,412,2.364,413,3.548,414,2.364,415,5.922,416,5.813,417,4.734,418,2.364,419,4.734,420,4.259,421,3.548,422,2.364,423,4.259,424,3.548,425,2.364,426,5.073,427,4.259,428,1.99,429,3.586,430,2.364,431,2.364,432,2.364,433,2.364,434,2.364,435,2.364]],["title/classes/SignDto.html",[0,0.161,436,1.994]],["body/classes/SignDto.html",[0,0.244,2,0.028,3,0.347,4,0.305,6,2.794,12,1.614,13,4.694,26,0.39,28,2.574,29,0.347,127,2.801,436,3.012,437,3.283,438,4.241,439,3.683,440,5.579,441,3.899,442,3.899,443,3.899]],["title/interfaces/TypeOrmModuleOptions.html",[86,1.994,444,2.46]],["body/interfaces/TypeOrmModuleOptions.html",[2,0.028,3,0.359,4,0.316,12,1.74,16,3.74,29,0.359,40,2.973,86,3.076,119,4.405,122,4.405,125,3.94,127,2.997,129,4.405,444,2.973,445,3.393,446,4.029,447,5.144,448,4.029]],["title/controllers/UserController.html",[50,1.43,449,2.201]],["body/controllers/UserController.html",[0,0.078,2,0.029,3,0.143,4,0.126,6,0.689,12,1.285,26,0.453,29,0.143,45,1.922,48,2.472,50,0.689,52,0.689,56,0.307,59,0.96,60,2.049,116,0.744,125,2.19,137,2.825,175,3.34,182,3.339,205,3.399,214,1.352,217,3.286,223,0.96,234,1.933,235,2.794,238,4.191,239,1.352,240,1.185,247,4.019,248,3.399,280,1.933,343,2.825,344,1.933,367,1.06,389,2.448,436,2.29,449,1.729,450,1.352,451,2.206,452,2.62,453,3.829,454,2.794,455,3.318,456,3.318,457,3.318,458,3.318,459,1.606,460,1.606,461,3.339,462,1.606,463,1.606,464,1.606,465,1.606,466,1.606,467,1.606,468,1.352,469,4.566,470,4.873,471,1.606,472,2.206,473,1.606,474,1.606,475,1.606,476,1.606,477,1.606,478,1.606,479,1.606,480,1.606,481,1.606,482,1.606,483,2.794,484,1.606,485,1.606,486,1.606,487,1.606,488,1.606,489,2.62,490,2.62,491,1.352,492,1.729,493,1.606,494,1.606,495,1.431,496,1.352,497,1.606,498,1.352,499,1.606,500,1.606,501,1.606,502,1.606,503,1.606,504,1.606,505,1.606,506,1.606,507,1.606,508,1.606,509,1.606,510,1.606,511,1.606,512,2.794,513,2.206,514,1.606,515,1.352,516,1.185,517,1.606,518,1.606,519,2.62,520,1.606,521,1.606,522,1.606,523,2.62,524,1.606,525,1.606,526,1.606]],["title/modules/UserModule.html",[62,1.147,69,1.994]],["body/modules/UserModule.html",[0,0.176,2,0.028,3,0.324,4,0.285,26,0.636,29,0.324,34,1.988,52,2.065,56,0.695,62,1.656,64,2.23,69,3.799,84,2.684,85,1.988,101,2.402,146,1.988,303,2.708,306,2.63,313,2.684,315,3.669,321,2.176,325,2.684,449,3.561,495,3.352,496,3.063,527,3.063,528,3.638,529,3.063,530,3.638,531,3.638,532,3.063,533,3.638,534,3.063,535,3.063,536,3.638]],["title/entities/UserProfile.html",[33,1.233,45,1.674]],["body/entities/UserProfile.html",[0,0.174,2,0.028,3,0.32,4,0.281,12,1.671,23,3.655,26,0.359,29,0.32,33,1.764,42,3.655,43,1.663,45,2.395,127,2.69,196,3.52,202,2.649,221,3.205,439,3.537,516,3.954,537,3.023,538,3.954,539,3.59,540,3.59,541,4.771,542,3.59,543,3.59,544,3.59,545,3.59,546,3.59,547,4.771,548,3.59]],["title/injectables/UserService.html",[153,0.688,495,1.822]],["body/injectables/UserService.html",[0,0.041,2,0.029,3,0.076,4,0.067,6,1.236,12,1.502,23,0.51,26,0.478,29,0.076,34,0.466,36,0.563,43,0.395,45,2.612,56,0.163,60,2.258,85,0.466,99,1.124,100,0.629,107,1.523,116,2.523,127,0.765,137,1.851,145,0.718,153,0.314,173,2.127,175,3.055,177,0.629,183,2.694,184,0.563,185,0.563,186,0.563,205,3.055,217,1.656,221,1.913,236,2.97,248,3.001,268,3.354,269,1.738,270,1.26,276,3.256,277,2.923,280,1.124,284,0.718,285,0.718,286,0.563,287,0.629,288,0.629,290,2.708,294,3.123,303,1.606,305,1.283,306,0.466,313,0.629,319,1.371,321,0.51,325,0.629,326,0.718,333,1.283,340,1.738,343,2.562,344,3.839,349,2.427,388,1.523,389,3.148,429,1.283,436,2.076,439,1.902,451,1.283,454,1.738,461,2.361,468,0.718,469,2.891,470,2.694,472,1.283,483,1.738,491,0.718,495,0.832,512,0.718,513,0.718,516,1.523,532,0.718,534,1.283,535,0.718,538,2.891,549,0.718,550,2.064,551,1.523,552,2.064,553,2.509,554,2.064,555,1.523,556,2.064,557,2.064,558,2.064,559,0.853,560,2.064,561,2.064,562,0.853,563,2.882,564,1.523,565,0.853,566,0.853,567,2.509,568,0.853,569,1.523,570,1.523,571,0.853,572,0.853,573,0.853,574,0.853,575,1.523,576,0.853,577,0.853,578,0.853,579,1.523,580,0.853,581,4.266,582,0.853,583,0.853,584,0.853,585,0.853,586,0.853,587,0.853,588,0.853,589,0.853,590,0.853,591,0.853,592,0.853,593,0.853,594,0.853,595,0.853,596,0.853,597,0.853,598,3.709,599,1.523,600,1.523,601,1.523,602,3.199,603,0.853,604,0.853,605,0.853,606,0.853,607,0.853,608,0.853,609,0.853,610,1.523,611,0.853,612,0.853,613,0.853,614,1.523,615,0.853,616,0.853,617,0.853,618,0.853,619,0.853,620,3.199,621,2.113,622,1.523,623,2.113,624,1.523,625,1.523,626,0.853,627,0.853,628,1.523,629,0.853,630,1.738,631,0.853,632,0.853,633,0.853,634,0.853,635,0.853,636,0.853,637,0.853,638,0.853,639,0.853,640,2.064,641,0.853,642,0.853,643,0.853,644,2.509,645,0.718,646,1.523,647,0.853,648,0.853,649,0.853,650,1.283,651,0.718,652,1.523,653,0.853,654,1.523,655,0.853,656,0.853,657,0.853,658,0.853,659,0.853,660,0.853]],["title/classes/addGuestDto.html",[0,0.161,492,2.201]],["body/classes/addGuestDto.html",[0,0.232,2,0.028,3,0.323,4,0.284,12,1.674,13,4.825,26,0.363,28,2.394,29,0.323,36,3.555,127,2.704,388,3.974,438,4.044,439,3.555,492,3.17,538,3.974,661,5.16,662,3.053,663,3.626,664,3.626,665,3.626,666,3.626,667,3.626]],["title/injectables/checkClientMiddleware.html",[90,2.201,153,0.688]],["body/injectables/checkClientMiddleware.html",[0,0.181,2,0.028,3,0.334,4,0.294,26,0.548,29,0.334,56,0.938,76,2.768,90,3.242,116,1.738,147,2.768,153,1.014,354,3.615,358,4.135,359,4.135,361,4.04,362,4.892,363,4.892,365,3.158,366,4.135,367,2.476,621,3.158,623,3.158,668,4.135,669,3.158,670,3.751,671,5.476,672,3.751,673,3.751,674,4.911,675,3.751]],["title/coverage.html",[676,3.822]],["body/coverage.html",[0,0.236,1,1.797,2,0.028,5,2.53,33,2.065,34,1.641,35,2.53,45,1.508,50,2.273,51,1.983,53,2.53,57,1.797,82,2.217,86,1.797,88,1.983,90,1.983,153,1.274,154,2.53,158,1.983,159,2.53,165,1.797,169,2.53,170,1.641,171,2.53,172,3.117,192,1.641,193,2.53,203,1.983,204,2.53,242,1.641,265,2.53,270,1.508,303,1.508,304,2.53,306,1.641,319,1.641,320,2.217,321,1.797,332,2.53,357,2.53,386,2.53,387,2.53,405,2.217,428,5.541,436,1.797,437,2.53,444,2.217,445,2.53,449,1.983,450,2.53,492,1.983,495,1.641,537,2.53,549,2.53,661,2.53,662,2.53,668,2.53,669,2.53,677,5.3,678,2.53,679,3.004,680,6.173,681,3.004,682,2.53,683,3.004,684,2.53,685,3.004,686,3.004,687,3.004,688,3.004,689,3.004,690,3.004,691,3.004,692,3.004,693,3.004,694,3.004,695,3.004,696,3.004,697,3.004,698,3.004,699,3.004,700,3.004,701,3.004,702,3.004,703,3.004,704,3.004]],["title/dependencies.html",[64,1.857,705,2.349]],["body/dependencies.html",[0,0.248,2,0.028,28,2.64,43,1.853,56,0.764,81,3.368,85,2.185,97,3.368,98,3.368,118,3.368,240,2.951,324,2.951,351,3.368,367,3.727,469,2.951,498,3.368,706,4,707,4,708,5.953,709,4,710,4,711,4,712,4,713,4,714,4,715,4,716,4,717,4,718,4,719,4,720,4,721,4,722,4,723,4,724,4,725,4,726,4,727,4,728,4,729,4,730,4,731,4,732,4]],["title/miscellaneous/enumerations.html",[733,2.059,734,4.007]],["body/miscellaneous/enumerations.html",[2,0.028,34,3.096,37,4.771,303,2.845,310,4.771,650,3.966,651,3.966,735,5.667,736,4.711,737,5.667,738,4.711,739,4.711]],["title/miscellaneous/functions.html",[733,2.059,740,4.007]],["body/miscellaneous/functions.html",[2,0.028,682,4.343,684,5.316,741,5.158]],["title/index.html",[742,2.79,743,2.79,744,2.79]],["body/index.html",[2,0.028,4,0.289,99,2.721,141,3.105,268,2.721,461,2.721,515,3.105,630,3.105,676,3.105,745,3.688,746,3.688,747,4.857,748,3.688,749,3.688,750,3.688,751,3.688,752,3.688,753,3.688,754,5.43,755,3.688,756,3.688,757,3.688,758,6.278,759,3.688,760,3.688,761,6.158,762,3.688,763,3.688,764,4.857,765,3.688,766,3.688,767,3.688,768,4.857,769,4.857,770,3.688,771,3.688,772,3.688,773,4.857,774,4.857,775,3.688,776,3.688,777,3.688,778,3.688,779,3.688,780,3.688,781,3.688,782,3.688,783,3.688,784,3.688,785,3.688,786,3.688,787,3.688,788,3.688,789,3.688,790,3.688,791,3.688,792,3.688,793,3.688,794,3.688,795,3.688,796,3.105]],["title/modules.html",[797,4.54]],["body/modules.html",[2,0.028,63,3.236,67,2.932,68,2.932,69,2.932,162,3.236,315,2.932,798,6.614]],["title/overview.html",[799,4.54]],["body/overview.html",[2,0.028,52,1.472,63,4.139,64,2.145,65,2.889,66,2.889,67,3.501,68,3.8,69,3.687,162,3.701,163,2.889,164,2.889,165,3.133,170,3.369,242,2.862,259,2.889,260,2.889,270,3.096,315,3.608,316,2.889,317,2.889,318,2.889,319,3.369,402,2.889,403,2.889,404,2.889,495,2.862,527,2.889,529,2.889,645,2.889,800,3.431,801,3.431,802,3.431,803,3.431,804,3.431]],["title/properties.html",[705,2.349,805,4.007]],["body/properties.html",[2,0.028,796,4.364,806,5.183,807,5.183,808,5.183]],["title/miscellaneous/variables.html",[733,2.059,809,4.007]],["body/miscellaneous/variables.html",[2,0.028,82,4.214,86,2.854,119,3.522,122,3.522,125,3.151,127,2.396,129,3.522,678,4.019,810,4.773,811,4.773,812,4.773,813,4.773,814,4.773,815,4.773,816,4.773]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"interfaces/TypeOrmModuleOptions.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"injectables/checkClientMiddleware.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":428,"title":{},"body":{"injectables/ResponseService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":807,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":645,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["1.1.19",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["1.17.2",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10/13",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["14.2.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["2.1.3",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":804,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":801,"title":{},"body":{"overview.html":{}}}],["4.1.6",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":802,"title":{},"body":{"overview.html":{}}}],["5.0.9",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":800,"title":{},"body":{"overview.html":{}}}],["60",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":803,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["__guestaddressrepo",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["__guestrepo",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["_adminrepo",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["_appuserrepo",{"_index":622,"title":{},"body":{"injectables/UserService.html":{}}}],["_cfgsrv",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["_cfgsrv.get('db.db",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["_cfgsrv.get('db.host",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["_cfgsrv.get('db.password",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["_cfgsrv.get('db.port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["_errortypes",{"_index":174,"title":{},"body":{"injectables/ErrorService.html":{}}}],["_errsrv",{"_index":413,"title":{},"body":{"injectables/ResponseService.html":{}}}],["_goodsrepo",{"_index":272,"title":{},"body":{"injectables/GoodsService.html":{}}}],["_goodssrv",{"_index":246,"title":{},"body":{"controllers/GoodsController.html":{}}}],["_guestrepo",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["_jwtsrv",{"_index":340,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/UserService.html":{}}}],["_responsesrv",{"_index":269,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["_userrepo",{"_index":620,"title":{},"body":{"injectables/UserService.html":{}}}],["_usersrv",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["abstract",{"_index":546,"title":{},"body":{"entities/UserProfile.html":{}}}],["access_token",{"_index":333,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/UserService.html":{}}}],["account",{"_index":439,"title":{},"body":{"classes/SignDto.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{}}}],["addgoods",{"_index":206,"title":{},"body":{"controllers/GoodsController.html":{}}}],["addgoods(addgoodspayload",{"_index":212,"title":{},"body":{"controllers/GoodsController.html":{}}}],["addgoodsdto",{"_index":1,"title":{"classes/AddGoodsDto.html":{}},"body":{"classes/AddGoodsDto.html":{},"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"coverage.html":{}}}],["addgoodspayload",{"_index":216,"title":{},"body":{"controllers/GoodsController.html":{}}}],["addguest",{"_index":451,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addguest(@body",{"_index":503,"title":{},"body":{"controllers/UserController.html":{}}}],["addguest(undefined",{"_index":459,"title":{},"body":{"controllers/UserController.html":{}}}],["addguest(userprofile",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["addguestdto",{"_index":492,"title":{"classes/addGuestDto.html":{}},"body":{"controllers/UserController.html":{},"classes/addGuestDto.html":{},"coverage.html":{}}}],["address",{"_index":388,"title":{},"body":{"entities/ReceivingAddress.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{}}}],["address.entity",{"_index":313,"title":{},"body":{"entities/Guest.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["address.entity.ts",{"_index":387,"title":{},"body":{"entities/ReceivingAddress.html":{},"coverage.html":{}}}],["address.entity.ts:13",{"_index":391,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["address.entity.ts:16",{"_index":390,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["address.entity.ts:24",{"_index":398,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["address_id",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["addressrow.address",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["addressrow.id",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(userprofile",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":34,"title":{"entities/Admin.html":{}},"body":{"entities/Admin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["adminrole",{"_index":37,"title":{},"body":{"entities/Admin.html":{},"miscellaneous/enumerations.html":{}}}],["adminrole.admin",{"_index":49,"title":{},"body":{"entities/Admin.html":{}}}],["allgoods",{"_index":292,"title":{},"body":{"injectables/GoodsService.html":{}}}],["amazing",{"_index":780,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":490,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation",{"_index":238,"title":{},"body":{"controllers/GoodsController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":239,"title":{},"body":{"controllers/GoodsController.html":{},"controllers/UserController.html":{}}}],["apitags('goods",{"_index":245,"title":{},"body":{"controllers/GoodsController.html":{}}}],["apitags('user",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":461,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["app.service",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":51,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":753,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":57,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["array",{"_index":213,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["async",{"_index":205,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.module",{"_index":533,"title":{},"body":{"modules/UserModule.html":{}}}],["auth.module.ts",{"_index":322,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["auth.service",{"_index":326,"title":{},"body":{"modules/JwtAuthModule.html":{},"injectables/UserService.html":{}}}],["auth.service.ts",{"_index":332,"title":{},"body":{"injectables/JwtAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":339,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth.service.ts:20",{"_index":342,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth.service.ts:30",{"_index":346,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth/jwt",{"_index":321,"title":{},"body":{"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["authcontroller",{"_index":158,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":162,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":789,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":165,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["avatar",{"_index":516,"title":{},"body":{"controllers/UserController.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{}}}],["avatar'})@useinterceptors(undefined",{"_index":485,"title":{},"body":{"controllers/UserController.html":{}}}],["avatar/${avatarfilename",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["avatarfilename",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["avatarstorepath",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["await",{"_index":248,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["b",{"_index":650,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["backers",{"_index":781,"title":{},"body":{"index.html":{}}}],["body",{"_index":235,"title":{},"body":{"controllers/GoodsController.html":{},"controllers/UserController.html":{}}}],["body.interface",{"_index":288,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["building",{"_index":748,"title":{},"body":{"index.html":{}}}],["c",{"_index":651,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":395,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["catch",{"_index":375,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{}}}],["cb",{"_index":426,"title":{},"body":{"injectables/ResponseService.html":{}}}],["cfg",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["chalk",{"_index":368,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["chalk.cyan(`[${method",{"_index":383,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["chalk.green(`[${method",{"_index":380,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["chalk.red(`[${method",{"_index":382,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["chalk.yellow(`[${ip",{"_index":377,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["chalk.yellow(`[${method",{"_index":381,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["checkclientmiddleware",{"_index":90,"title":{"injectables/checkClientMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/checkClientMiddleware.html":{},"coverage.html":{}}}],["checkclientmiddleware).forroutes",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":0,"title":{"classes/AddGoodsDto.html":{},"classes/SignDto.html":{},"classes/addGuestDto.html":{}},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"injectables/checkClientMiddleware.html":{},"coverage.html":{},"dependencies.html":{}}}],["client",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["client.middleware",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["client.middleware.ts",{"_index":669,"title":{},"body":{"injectables/checkClientMiddleware.html":{},"coverage.html":{}}}],["client.middleware.ts:7",{"_index":670,"title":{},"body":{"injectables/checkClientMiddleware.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_goodsmodule",{"_index":259,"title":{},"body":{"modules/GoodsModule.html":{},"overview.html":{}}}],["cluster_goodsmodule_providers",{"_index":260,"title":{},"body":{"modules/GoodsModule.html":{},"overview.html":{}}}],["cluster_jwtauthmodule",{"_index":316,"title":{},"body":{"modules/JwtAuthModule.html":{},"overview.html":{}}}],["cluster_jwtauthmodule_exports",{"_index":318,"title":{},"body":{"modules/JwtAuthModule.html":{},"overview.html":{}}}],["cluster_jwtauthmodule_providers",{"_index":317,"title":{},"body":{"modules/JwtAuthModule.html":{},"overview.html":{}}}],["cluster_responsemodule",{"_index":402,"title":{},"body":{"modules/ResponseModule.html":{},"overview.html":{}}}],["cluster_responsemodule_exports",{"_index":403,"title":{},"body":{"modules/ResponseModule.html":{},"overview.html":{}}}],["cluster_responsemodule_providers",{"_index":404,"title":{},"body":{"modules/ResponseModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":527,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":528,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":529,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":42,"title":{},"body":{"entities/Admin.html":{},"entities/Goods.html":{},"entities/Guest.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{}}}],["column({nullable",{"_index":541,"title":{},"body":{"entities/UserProfile.html":{}}}],["column({type",{"_index":38,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{}}}],["column({unique",{"_index":539,"title":{},"body":{"entities/UserProfile.html":{}}}],["compodoc/compodoc",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["config/.env1','.env",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["config/db.config",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["config/interfaces/db.interface",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forfeature(dbconfig",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionlimit",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(err.tostring",{"_index":433,"title":{},"body":{"injectables/ResponseService.html":{}}}],["console.log(exeresult",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(ids",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(log",{"_index":385,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["const",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/checkClientMiddleware.html":{}}}],["constructor",{"_index":177,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["constructor(_adminrepo",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(_errsrv",{"_index":411,"title":{},"body":{"injectables/ResponseService.html":{}}}],["constructor(_goodsrepo",{"_index":267,"title":{},"body":{"injectables/GoodsService.html":{}}}],["constructor(_jwtsrv",{"_index":337,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/GoodsController.html":{},"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{}}}],["consumer",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":50,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GoodsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GoodsController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('goods",{"_index":244,"title":{},"body":{"controllers/GoodsController.html":{}}}],["controller('user",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":676,"title":{"coverage.html":{}},"body":{"index.html":{}}}],["create",{"_index":266,"title":{},"body":{"injectables/GoodsService.html":{}}}],["create(goodsentities",{"_index":273,"title":{},"body":{"injectables/GoodsService.html":{}}}],["data",{"_index":415,"title":{},"body":{"injectables/ResponseService.html":{}}}],["database",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TypeOrmModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/ResponseService.html":{}}}],["db(userprofile",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["dbconfig",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":40,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{},"interfaces/TypeOrmModuleOptions.html":{}}}],["delete",{"_index":223,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":219,"title":{},"body":{"controllers/GoodsController.html":{}}}],["delete('guests",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('guests')@apioperation({summary",{"_index":464,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('usersession",{"_index":525,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('usersession')@apioperation({summary",{"_index":475,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(ids",{"_index":278,"title":{},"body":{"injectables/GoodsService.html":{}}}],["deletebyid",{"_index":207,"title":{},"body":{"controllers/GoodsController.html":{}}}],["deletebyid(@param('id",{"_index":255,"title":{},"body":{"controllers/GoodsController.html":{}}}],["deletebyid(id",{"_index":218,"title":{},"body":{"controllers/GoodsController.html":{}}}],["deletebyids",{"_index":208,"title":{},"body":{"controllers/GoodsController.html":{}}}],["deletebyids(@body",{"_index":257,"title":{},"body":{"controllers/GoodsController.html":{}}}],["deletebyids(delids",{"_index":222,"title":{},"body":{"controllers/GoodsController.html":{}}}],["deleteguests",{"_index":452,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteguests(@body",{"_index":506,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteguests(undefined",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteguestsbyids",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteguestsbyids(ids",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteusersession",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteusersession(token",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["delids",{"_index":225,"title":{},"body":{"controllers/GoodsController.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoodsModule.html":{},"modules/JwtAuthModule.html":{},"modules/ResponseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["description",{"_index":515,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["detail",{"_index":429,"title":{},"body":{"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["development",{"_index":760,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":438,"title":{},"body":{"classes/SignDto.html":{},"classes/addGuestDto.html":{}}}],["dto/add",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/goods.dto",{"_index":241,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["dto/sign.dto",{"_index":491,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":770,"title":{},"body":{"index.html":{}}}],["eager",{"_index":394,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["efficient",{"_index":749,"title":{},"body":{"index.html":{}}}],["entities/admin.entity",{"_index":532,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities/goods.entity",{"_index":263,"title":{},"body":{"modules/GoodsModule.html":{},"injectables/GoodsService.html":{}}}],["entities/guest",{"_index":535,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities/guest.entity",{"_index":534,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":33,"title":{"entities/Admin.html":{},"entities/Goods.html":{},"entities/Guest.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{}},"body":{"entities/Admin.html":{},"entities/Goods.html":{},"entities/Guest.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["enum",{"_index":39,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{}}}],["enumerations",{"_index":734,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["enums/role.enum",{"_index":44,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{}}}],["env",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":376,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{}}}],["err.tostring",{"_index":435,"title":{},"body":{"injectables/ResponseService.html":{}}}],["errcode",{"_index":181,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errinfo",{"_index":176,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errinfo(errcode",{"_index":179,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error",{"_index":409,"title":{},"body":{"injectables/ResponseService.html":{}}}],["error(errorcode",{"_index":414,"title":{},"body":{"injectables/ResponseService.html":{}}}],["error.message",{"_index":431,"title":{},"body":{"injectables/ResponseService.html":{}}}],["error/err",{"_index":408,"title":{},"body":{"modules/ResponseModule.html":{},"injectables/ResponseService.html":{}}}],["error_type",{"_index":184,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["errorcode",{"_index":419,"title":{},"body":{"injectables/ResponseService.html":{}}}],["errorresponse",{"_index":420,"title":{},"body":{"injectables/ResponseService.html":{}}}],["errorservice",{"_index":170,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/ErrorService.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"coverage.html":{},"overview.html":{}}}],["exeresult",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["existssync",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["existssync(avatarstorepath",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":29,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"interfaces/TypeOrmModuleOptions.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"injectables/checkClientMiddleware.html":{}}}],["exports",{"_index":331,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/ResponseModule.html":{}}}],["express",{"_index":367,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/checkClientMiddleware.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":483,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["extends",{"_index":47,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{}}}],["extra",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":350,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["false",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthService.html":{},"injectables/UserService.html":{}}}],["file",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["file.buffer",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["fileinterceptor",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["findall",{"_index":209,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["findone",{"_index":210,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["findone(@param('id",{"_index":251,"title":{},"body":{"controllers/GoodsController.html":{}}}],["findone(id",{"_index":227,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["forwarded",{"_index":373,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["framework",{"_index":747,"title":{},"body":{"index.html":{}}}],["fs",{"_index":594,"title":{},"body":{"injectables/UserService.html":{}}}],["function",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":740,"title":{"miscellaneous/functions.html":{}},"body":{}}],["g_category",{"_index":7,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Goods.html":{}}}],["g_id",{"_index":194,"title":{},"body":{"entities/Goods.html":{}}}],["g_info",{"_index":8,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Goods.html":{}}}],["g_price",{"_index":9,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Goods.html":{}}}],["g_stock",{"_index":10,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Goods.html":{}}}],["g_thumb",{"_index":11,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Goods.html":{}}}],["get(':id",{"_index":228,"title":{},"body":{"controllers/GoodsController.html":{}}}],["get('guests",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["get('guests')@apioperation({summary",{"_index":466,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":471,"title":{},"body":{"controllers/UserController.html":{}}}],["getguests",{"_index":453,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofilesofguests",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":742,"title":{"index.html":{}},"body":{}}],["getuserprofile",{"_index":454,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserprofile(token",{"_index":468,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserprofilebyid",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserprofilebyid(userid",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":407,"title":{},"body":{"modules/ResponseModule.html":{}}}],["good",{"_index":296,"title":{},"body":{"injectables/GoodsService.html":{}}}],["goods",{"_index":192,"title":{"entities/Goods.html":{}},"body":{"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"coverage.html":{}}}],["goods.controller",{"_index":262,"title":{},"body":{"modules/GoodsModule.html":{}}}],["goods.service",{"_index":243,"title":{},"body":{"controllers/GoodsController.html":{},"modules/GoodsModule.html":{}}}],["goodscontroller",{"_index":203,"title":{"controllers/GoodsController.html":{}},"body":{"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"coverage.html":{}}}],["goodsdata",{"_index":298,"title":{},"body":{"injectables/GoodsService.html":{}}}],["goodsentities",{"_index":275,"title":{},"body":{"injectables/GoodsService.html":{}}}],["goodsmodule",{"_index":67,"title":{"modules/GoodsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GoodsModule.html":{},"modules.html":{},"overview.html":{}}}],["goodsservice",{"_index":242,"title":{"injectables/GoodsService.html":{}},"body":{"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":776,"title":{},"body":{"index.html":{}}}],["guest",{"_index":303,"title":{"entities/Guest.html":{}},"body":{"entities/Guest.html":{},"entities/ReceivingAddress.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["guest.dto",{"_index":494,"title":{},"body":{"controllers/UserController.html":{}}}],["guest.dto.ts",{"_index":662,"title":{},"body":{"classes/addGuestDto.html":{},"coverage.html":{}}}],["guest.dto.ts:11",{"_index":667,"title":{},"body":{"classes/addGuestDto.html":{}}}],["guest.dto.ts:14",{"_index":663,"title":{},"body":{"classes/addGuestDto.html":{}}}],["guest.dto.ts:17",{"_index":666,"title":{},"body":{"classes/addGuestDto.html":{}}}],["guest.dto.ts:20",{"_index":664,"title":{},"body":{"classes/addGuestDto.html":{}}}],["guest.dto.ts:8",{"_index":665,"title":{},"body":{"classes/addGuestDto.html":{}}}],["guest.entity",{"_index":401,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["guest.receiving_address",{"_index":393,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["guest.receiving_address.map(addressrow",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["guestarray",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["guestrole",{"_index":310,"title":{},"body":{"entities/Guest.html":{},"miscellaneous/enumerations.html":{}}}],["guestrole.guest",{"_index":314,"title":{},"body":{"entities/Guest.html":{}}}],["guests",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["guests.map(guest",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["h",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["headers",{"_index":487,"title":{},"body":{"controllers/UserController.html":{}}}],["headers('userticket",{"_index":523,"title":{},"body":{"controllers/UserController.html":{}}}],["here",{"_index":786,"title":{},"body":{"index.html":{}}}],["host",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TypeOrmModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":31,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["http://localhost:${servicerort}/user",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["https",{"_index":32,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["https://nestjs.com",{"_index":793,"title":{},"body":{"index.html":{}}}],["id",{"_index":221,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{}}}],["ids",{"_index":280,"title":{},"body":{"injectables/GoodsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ignoreenvfile",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreenvvars",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreexpiration",{"_index":356,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["implements",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"injectables/checkClientMiddleware.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/GoodsModule.html":{},"modules/JwtAuthModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":744,"title":{"index.html":{}},"body":{}}],["indexable",{"_index":446,"title":{},"body":{"interfaces/TypeOrmModuleOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"interfaces/TypeOrmModuleOptions.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"injectables/checkClientMiddleware.html":{}}}],["inject",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":153,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{},"injectables/checkClientMiddleware.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{},"injectables/checkClientMiddleware.html":{},"coverage.html":{}}}],["injectrepository",{"_index":284,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["injectrepository(admin",{"_index":595,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(goods",{"_index":289,"title":{},"body":{"injectables/GoodsService.html":{}}}],["injectrepository(guest",{"_index":596,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(receivingaddress",{"_index":597,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":757,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":759,"title":{},"body":{"index.html":{}}}],["interface",{"_index":444,"title":{"interfaces/TypeOrmModuleOptions.html":{}},"body":{"interfaces/TypeOrmModuleOptions.html":{},"coverage.html":{}}}],["ip",{"_index":370,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["isglobal",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":18,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["isstring",{"_index":13,"title":{},"body":{"classes/AddGoodsDto.html":{},"classes/SignDto.html":{},"classes/addGuestDto.html":{}}}],["isurl",{"_index":27,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["isurl({protocols",{"_index":20,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["join",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["join(__dirname",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":400,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["jwt",{"_index":325,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["jwtauthmodule",{"_index":315,"title":{"modules/JwtAuthModule.html":{}},"body":{"modules/JwtAuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtauthservice",{"_index":319,"title":{"injectables/JwtAuthService.html":{}},"body":{"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["jwtmodule",{"_index":323,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtmodule.register",{"_index":327,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtservice",{"_index":338,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["kamil",{"_index":790,"title":{},"body":{"index.html":{}}}],["license",{"_index":796,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":774,"title":{},"body":{"index.html":{}}}],["literal",{"_index":182,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{}}}],["localhost",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":369,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermiddleware",{"_index":88,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logging",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["manytoone",{"_index":399,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["manytoone(undefined",{"_index":392,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["memberof",{"_index":352,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["message",{"_index":24,"title":{},"body":{"classes/AddGoodsDto.html":{},"injectables/ErrorService.html":{},"injectables/ResponseService.html":{}}}],["metadata",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["method.touppercase",{"_index":379,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["middlewareconsumer",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/check",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/logger.middleware",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":773,"title":{},"body":{"index.html":{}}}],["mkdirsync",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["mkdirsync(avatarstorepath",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["mode",{"_index":764,"title":{},"body":{"index.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoodsModule.html":{},"modules/JwtAuthModule.html":{},"modules/ResponseModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoodsModule.html":{},"modules/JwtAuthModule.html":{},"modules/ResponseModule.html":{},"modules/UserModule.html":{}}}],["module.ts",{"_index":406,"title":{},"body":{"modules/ResponseModule.html":{}}}],["modules",{"_index":797,"title":{"modules.html":{}},"body":{}}],["modules/goods/goods.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/response/response",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":785,"title":{},"body":{"index.html":{}}}],["ms",{"_index":351,"title":{},"body":{"injectables/JwtAuthService.html":{},"dependencies.html":{}}}],["mysql",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":791,"title":{},"body":{"index.html":{}}}],["name",{"_index":538,"title":{},"body":{"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{}}}],["nest",{"_index":754,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":795,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/checkClientMiddleware.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":324,"title":{},"body":{"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":498,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":240,"title":{},"body":{"controllers/GoodsController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":366,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["nestmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":362,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["nextfunction",{"_index":363,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["node.js",{"_index":746,"title":{},"body":{"index.html":{}}}],["npm",{"_index":758,"title":{},"body":{"index.html":{}}}],["null",{"_index":349,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/UserService.html":{}}}],["nullable",{"_index":547,"title":{},"body":{"entities/UserProfile.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AddGoodsDto.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"interfaces/TypeOrmModuleOptions.html":{}}}],["ondelete",{"_index":396,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["onetomany",{"_index":312,"title":{},"body":{"entities/Guest.html":{}}}],["onetomany(undefined",{"_index":307,"title":{},"body":{"entities/Guest.html":{}}}],["open",{"_index":775,"title":{},"body":{"index.html":{}}}],["options",{"_index":417,"title":{},"body":{"injectables/ResponseService.html":{}}}],["options?.detail",{"_index":432,"title":{},"body":{"injectables/ResponseService.html":{}}}],["ori",{"_index":671,"title":{},"body":{"injectables/checkClientMiddleware.html":{}}}],["orphanedrowaction",{"_index":397,"title":{},"body":{"entities/ReceivingAddress.html":{}}}],["overview",{"_index":799,"title":{"overview.html":{}},"body":{}}],["package",{"_index":705,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":236,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["parseint(process.env.port",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":183,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"classes/SignDto.html":{},"interfaces/TypeOrmModuleOptions.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":237,"title":{},"body":{"controllers/GoodsController.html":{}}}],["patch(':id",{"_index":232,"title":{},"body":{"controllers/GoodsController.html":{}}}],["path",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{}}}],["path\\dist\\service\\public\\upload\\user",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["piemall",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":783,"title":{},"body":{"index.html":{}}}],["port",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TypeOrmModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":234,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{}}}],["post('avatar",{"_index":514,"title":{},"body":{"controllers/UserController.html":{}}}],["post('avatar')@apibody({description",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["post('guest",{"_index":502,"title":{},"body":{"controllers/UserController.html":{}}}],["post('guest')@apioperation({summary",{"_index":460,"title":{},"body":{"controllers/UserController.html":{}}}],["post('name",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["post('name')@apioperation({summary",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":214,"title":{},"body":{"controllers/GoodsController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":202,"title":{},"body":{"entities/Goods.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":196,"title":{},"body":{"entities/Goods.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{}}}],["private",{"_index":173,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["process.env.db",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.host",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.password",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.piemall_admin",{"_index":623,"title":{},"body":{"injectables/UserService.html":{},"injectables/checkClientMiddleware.html":{}}}],["process.env.piemall_admin_ori",{"_index":675,"title":{},"body":{"injectables/checkClientMiddleware.html":{}}}],["process.env.piemall_app",{"_index":621,"title":{},"body":{"injectables/UserService.html":{},"injectables/checkClientMiddleware.html":{}}}],["process.env.piemall_app_ori",{"_index":673,"title":{},"body":{"injectables/checkClientMiddleware.html":{}}}],["process.env.piemall_service_port",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.secret",{"_index":329,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["process.env.ssd",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["process.env.username",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processaddressguests",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["production",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["profile.interface",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["progressive",{"_index":745,"title":{},"body":{"index.html":{}}}],["project",{"_index":630,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["promise",{"_index":276,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":805,"title":{"properties.html":{}},"body":{}}],["propname",{"_index":447,"title":{},"body":{"interfaces/TypeOrmModuleOptions.html":{}}}],["protocols",{"_index":30,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["provider",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoodsModule.html":{},"modules/JwtAuthModule.html":{},"modules/ResponseModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":175,"title":{},"body":{"injectables/ErrorService.html":{},"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["read",{"_index":784,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":6,"title":{},"body":{"classes/AddGoodsDto.html":{},"controllers/AppController.html":{},"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["receiving_address",{"_index":305,"title":{},"body":{"entities/Guest.html":{},"injectables/UserService.html":{}}}],["receivingaddress",{"_index":306,"title":{"entities/ReceivingAddress.html":{}},"body":{"entities/Guest.html":{},"entities/ReceivingAddress.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["receivingaddress.user",{"_index":308,"title":{},"body":{"entities/Guest.html":{}}}],["record",{"_index":470,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["recursive",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["reflect",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["repo",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["repo.findone",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["repo.save(userprofile",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":268,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":365,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["req.connection.remoteaddress",{"_index":374,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.get('origin",{"_index":672,"title":{},"body":{"injectables/checkClientMiddleware.html":{}}}],["req.headers['x",{"_index":372,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.method",{"_index":378,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.originalurl",{"_index":384,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.session.client",{"_index":674,"title":{},"body":{"injectables/checkClientMiddleware.html":{}}}],["request",{"_index":360,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["requestmethod",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["require_protocol",{"_index":22,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["res",{"_index":354,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{},"injectables/checkClientMiddleware.html":{}}}],["response",{"_index":361,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"modules/ResponseModule.html":{},"injectables/checkClientMiddleware.html":{}}}],["response/response",{"_index":285,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["responsebody",{"_index":277,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["responsemodule",{"_index":68,"title":{"modules/ResponseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResponseModule.html":{},"modules.html":{},"overview.html":{}}}],["responseservice",{"_index":270,"title":{"injectables/ResponseService.html":{}},"body":{"injectables/GoodsService.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ErrorService.html":{},"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":290,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":36,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{}}}],["role.controller",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["role.service",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["root",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["rootpath",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["run",{"_index":761,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":750,"title":{},"body":{"index.html":{}}}],["secret",{"_index":328,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["select",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":751,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":286,"title":{},"body":{"injectables/GoodsService.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["service.ts",{"_index":172,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ResponseService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":412,"title":{},"body":{"injectables/ResponseService.html":{}}}],["service.ts:13",{"_index":180,"title":{},"body":{"injectables/ErrorService.html":{}}}],["service.ts:17",{"_index":422,"title":{},"body":{"injectables/ResponseService.html":{}}}],["service.ts:32",{"_index":418,"title":{},"body":{"injectables/ResponseService.html":{}}}],["service.ts:54",{"_index":425,"title":{},"body":{"injectables/ResponseService.html":{}}}],["service.ts:6",{"_index":178,"title":{},"body":{"injectables/ErrorService.html":{}}}],["servicerort",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["session",{"_index":469,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["session.client",{"_index":512,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["session.destroy",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["session.userid",{"_index":513,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["session，只有二次登录，session",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["setusername",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["setusername(client",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["sherlock",{"_index":330,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["side",{"_index":752,"title":{},"body":{"index.html":{}}}],["signaccesstoken",{"_index":335,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["signaccesstoken(userid",{"_index":341,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["signadmindto",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["signdto",{"_index":436,"title":{"classes/SignDto.html":{}},"body":{"classes/SignDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["signout",{"_index":455,"title":{},"body":{"controllers/UserController.html":{}}}],["signout(token",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["signtype",{"_index":440,"title":{},"body":{"classes/SignDto.html":{}}}],["signuser",{"_index":456,"title":{},"body":{"controllers/UserController.html":{}}}],["signuser(userprofile",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"modules/GoodsModule.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"injectables/LoggerMiddleware.html":{},"entities/ReceivingAddress.html":{},"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"interfaces/TypeOrmModuleOptions.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{},"injectables/checkClientMiddleware.html":{},"index.html":{}}}],["sponsors",{"_index":778,"title":{},"body":{"index.html":{}}}],["src/.../db.config.ts",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:66",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":155,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/db.config.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/interfaces/db.interface.ts",{"_index":445,"title":{},"body":{"interfaces/TypeOrmModuleOptions.html":{},"coverage.html":{}}}],["src/config/interfaces/db.interface.ts:6",{"_index":448,"title":{},"body":{"interfaces/TypeOrmModuleOptions.html":{}}}],["src/main.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/check",{"_index":668,"title":{},"body":{"injectables/checkClientMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":357,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts:9",{"_index":364,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/modules/goods/dto/goods.dto.ts",{"_index":5,"title":{},"body":{"classes/AddGoodsDto.html":{},"coverage.html":{}}}],["src/modules/goods/dto/goods.dto.ts:18",{"_index":25,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["src/modules/goods/dto/goods.dto.ts:21",{"_index":15,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["src/modules/goods/dto/goods.dto.ts:24",{"_index":17,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["src/modules/goods/dto/goods.dto.ts:29",{"_index":19,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["src/modules/goods/dto/goods.dto.ts:7",{"_index":14,"title":{},"body":{"classes/AddGoodsDto.html":{}}}],["src/modules/goods/entities/goods.entity.ts",{"_index":193,"title":{},"body":{"entities/Goods.html":{},"coverage.html":{}}}],["src/modules/goods/entities/goods.entity.ts:12",{"_index":201,"title":{},"body":{"entities/Goods.html":{}}}],["src/modules/goods/entities/goods.entity.ts:15",{"_index":198,"title":{},"body":{"entities/Goods.html":{}}}],["src/modules/goods/entities/goods.entity.ts:18",{"_index":199,"title":{},"body":{"entities/Goods.html":{}}}],["src/modules/goods/entities/goods.entity.ts:21",{"_index":200,"title":{},"body":{"entities/Goods.html":{}}}],["src/modules/goods/entities/goods.entity.ts:6",{"_index":197,"title":{},"body":{"entities/Goods.html":{}}}],["src/modules/goods/entities/goods.entity.ts:9",{"_index":195,"title":{},"body":{"entities/Goods.html":{}}}],["src/modules/goods/goods.controller.ts",{"_index":204,"title":{},"body":{"controllers/GoodsController.html":{},"coverage.html":{}}}],["src/modules/goods/goods.controller.ts:23",{"_index":215,"title":{},"body":{"controllers/GoodsController.html":{}}}],["src/modules/goods/goods.controller.ts:30",{"_index":226,"title":{},"body":{"controllers/GoodsController.html":{}}}],["src/modules/goods/goods.controller.ts:35",{"_index":229,"title":{},"body":{"controllers/GoodsController.html":{}}}],["src/modules/goods/goods.controller.ts:40",{"_index":233,"title":{},"body":{"controllers/GoodsController.html":{}}}],["src/modules/goods/goods.controller.ts:45",{"_index":220,"title":{},"body":{"controllers/GoodsController.html":{}}}],["src/modules/goods/goods.controller.ts:50",{"_index":224,"title":{},"body":{"controllers/GoodsController.html":{}}}],["src/modules/goods/goods.module.ts",{"_index":261,"title":{},"body":{"modules/GoodsModule.html":{}}}],["src/modules/goods/goods.service.ts",{"_index":265,"title":{},"body":{"injectables/GoodsService.html":{},"coverage.html":{}}}],["src/modules/goods/goods.service.ts:11",{"_index":271,"title":{},"body":{"injectables/GoodsService.html":{}}}],["src/modules/goods/goods.service.ts:22",{"_index":281,"title":{},"body":{"injectables/GoodsService.html":{}}}],["src/modules/goods/goods.service.ts:35",{"_index":282,"title":{},"body":{"injectables/GoodsService.html":{}}}],["src/modules/goods/goods.service.ts:49",{"_index":283,"title":{},"body":{"injectables/GoodsService.html":{}}}],["src/modules/goods/goods.service.ts:62",{"_index":279,"title":{},"body":{"injectables/GoodsService.html":{}}}],["src/modules/goods/goods.service.ts:75",{"_index":274,"title":{},"body":{"injectables/GoodsService.html":{}}}],["src/modules/jwt",{"_index":320,"title":{},"body":{"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"coverage.html":{}}}],["src/modules/response/error/err",{"_index":171,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/modules/response/response",{"_index":405,"title":{},"body":{"modules/ResponseModule.html":{},"injectables/ResponseService.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/role/role.module.ts",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/role/role.service.ts",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/user/dto/add",{"_index":661,"title":{},"body":{"classes/addGuestDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/sign.dto.ts",{"_index":437,"title":{},"body":{"classes/SignDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/sign.dto.ts:10",{"_index":442,"title":{},"body":{"classes/SignDto.html":{}}}],["src/modules/user/dto/sign.dto.ts:13",{"_index":443,"title":{},"body":{"classes/SignDto.html":{}}}],["src/modules/user/dto/sign.dto.ts:7",{"_index":441,"title":{},"body":{"classes/SignDto.html":{}}}],["src/modules/user/entities/admin.entity.ts",{"_index":35,"title":{},"body":{"entities/Admin.html":{},"coverage.html":{}}}],["src/modules/user/entities/admin.entity.ts:12",{"_index":41,"title":{},"body":{"entities/Admin.html":{}}}],["src/modules/user/entities/guest",{"_index":386,"title":{},"body":{"entities/ReceivingAddress.html":{},"coverage.html":{}}}],["src/modules/user/entities/guest.entity.ts",{"_index":304,"title":{},"body":{"entities/Guest.html":{},"coverage.html":{}}}],["src/modules/user/entities/guest.entity.ts:12",{"_index":311,"title":{},"body":{"entities/Guest.html":{}}}],["src/modules/user/entities/guest.entity.ts:16",{"_index":309,"title":{},"body":{"entities/Guest.html":{}}}],["src/modules/user/entities/user.base.entity.ts",{"_index":537,"title":{},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["src/modules/user/entities/user.base.entity.ts:12",{"_index":540,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/modules/user/entities/user.base.entity.ts:15",{"_index":545,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/modules/user/entities/user.base.entity.ts:18",{"_index":542,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/modules/user/entities/user.base.entity.ts:6",{"_index":543,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/modules/user/entities/user.base.entity.ts:9",{"_index":544,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/modules/user/enums/role.enum.ts",{"_index":736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/user.controller.ts",{"_index":450,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:100",{"_index":473,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:112",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:27",{"_index":462,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:35",{"_index":465,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:43",{"_index":467,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:51",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:67",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:82",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":530,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":549,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:117",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:138",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:18",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:180",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:212",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:227",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:259",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:285",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:35",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:62",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:81",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:94",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":762,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":765,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":766,"title":{},"body":{"index.html":{}}}],["started",{"_index":743,"title":{"index.html":{}},"body":{}}],["starter",{"_index":756,"title":{},"body":{"index.html":{}}}],["static",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["staticsrvdir",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["status",{"_index":427,"title":{},"body":{"injectables/ResponseService.html":{}}}],["stay",{"_index":787,"title":{},"body":{"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"classes/AddGoodsDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ErrorService.html":{},"entities/Goods.html":{},"controllers/GoodsController.html":{},"injectables/GoodsService.html":{},"injectables/JwtAuthService.html":{},"entities/ReceivingAddress.html":{},"injectables/ResponseService.html":{},"classes/SignDto.html":{},"interfaces/TypeOrmModuleOptions.html":{},"controllers/UserController.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"classes/addGuestDto.html":{}}}],["success",{"_index":348,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/ResponseService.html":{}}}],["success(data",{"_index":421,"title":{},"body":{"injectables/ResponseService.html":{}}}],["successresponse",{"_index":423,"title":{},"body":{"injectables/ResponseService.html":{}}}],["summary",{"_index":247,"title":{},"body":{"controllers/GoodsController.html":{},"controllers/UserController.html":{}}}],["super_user",{"_index":737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":779,"title":{},"body":{"index.html":{}}}],["svg",{"_index":798,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":416,"title":{},"body":{"injectables/ResponseService.html":{}}}],["table",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":769,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":772,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":771,"title":{},"body":{"index.html":{}}}],["tests",{"_index":768,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":777,"title":{},"body":{"index.html":{}}}],["this.__guestaddressrepo.insert",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["this.__guestrepo",{"_index":600,"title":{},"body":{"injectables/UserService.html":{}}}],["this.__guestrepo.delete(ids",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["this.__guestrepo.find",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["this.__guestrepo.findone",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["this._adminrepo",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["this._adminrepo.findone",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["this._errortypes[errcode",{"_index":191,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._errortypes[error_type.already_exist",{"_index":190,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._errortypes[error_type.not_found",{"_index":188,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._errortypes[error_type.unauthorized",{"_index":189,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._errortypes[error_type.unknow",{"_index":187,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._errsrv.errinfo(errorcode",{"_index":430,"title":{},"body":{"injectables/ResponseService.html":{}}}],["this._goodsrepo.delete(ids",{"_index":300,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._goodsrepo.find",{"_index":293,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._goodsrepo.findone(id",{"_index":297,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._goodsrepo.insert(goodsentities",{"_index":302,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._goodsrepo.update(id",{"_index":299,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._goodssrv.create(addgoodspayload",{"_index":249,"title":{},"body":{"controllers/GoodsController.html":{}}}],["this._goodssrv.delete(delids",{"_index":258,"title":{},"body":{"controllers/GoodsController.html":{}}}],["this._goodssrv.delete(id",{"_index":256,"title":{},"body":{"controllers/GoodsController.html":{}}}],["this._goodssrv.findall",{"_index":250,"title":{},"body":{"controllers/GoodsController.html":{}}}],["this._goodssrv.findone(id",{"_index":252,"title":{},"body":{"controllers/GoodsController.html":{}}}],["this._goodssrv.update(id",{"_index":254,"title":{},"body":{"controllers/GoodsController.html":{}}}],["this._jwtsrv.signaccesstoken(id",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["this._jwtsrv.signasync(userid",{"_index":353,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["this._jwtsrv.verifyaccesstoken(token",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["this._jwtsrv.verifyasync(token",{"_index":355,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["this._responsesrv.error(error_type.already_exist",{"_index":601,"title":{},"body":{"injectables/UserService.html":{}}}],["this._responsesrv.error(error_type.not_found",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["this._responsesrv.error(error_type.unknow",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["this._responsesrv.success",{"_index":294,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/UserService.html":{}}}],["this._responsesrv.success(null",{"_index":301,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._responsesrv.success(userprofile",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["this._responsesrv.tryexecute",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["this._responsesrv.tryexecute(async",{"_index":598,"title":{},"body":{"injectables/UserService.html":{}}}],["this._responsesrv.tryexecute(tryexecution",{"_index":295,"title":{},"body":{"injectables/GoodsService.html":{}}}],["this._usersrv.addguest(userprofile",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.deleteguestsbyids(ids",{"_index":507,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.deleteusersession(token",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.getprofilesofguests",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.getuserprofile(token",{"_index":524,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.setusername",{"_index":511,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.updateavatar",{"_index":518,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.userlogin(userprofile",{"_index":520,"title":{},"body":{"controllers/UserController.html":{}}}],["this._usersrv.userregister(userprofile",{"_index":522,"title":{},"body":{"controllers/UserController.html":{}}}],["this.adduser(userprofile",{"_index":599,"title":{},"body":{"injectables/UserService.html":{}}}],["this.appservice.gethello",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["this.error(error_type.unknow",{"_index":434,"title":{},"body":{"injectables/ResponseService.html":{}}}],["this.getuserprofilebyid(userid",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["this[_userrepo].findone",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["this[_userrepo].update(userid",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["ticket",{"_index":334,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["ticket并获取userprofile",{"_index":472,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["token",{"_index":343,"title":{},"body":{"injectables/JwtAuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":788,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":23,"title":{},"body":{"classes/AddGoodsDto.html":{},"modules/AppModule.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{}}}],["try",{"_index":371,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ResponseService.html":{}}}],["tryexecute",{"_index":410,"title":{},"body":{"injectables/ResponseService.html":{}}}],["tryexecute(cb",{"_index":424,"title":{},"body":{"injectables/ResponseService.html":{}}}],["tryexecution",{"_index":291,"title":{},"body":{"injectables/GoodsService.html":{}}}],["twitter",{"_index":794,"title":{},"body":{"index.html":{}}}],["type",{"_index":48,"title":{},"body":{"entities/Admin.html":{},"modules/AppModule.html":{},"injectables/ErrorService.html":{},"entities/Guest.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{}}}],["type.enum",{"_index":186,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["typeorm",{"_index":43,"title":{},"body":{"entities/Admin.html":{},"entities/Goods.html":{},"injectables/GoodsService.html":{},"entities/Guest.html":{},"entities/ReceivingAddress.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/GoodsModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([admin",{"_index":536,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([goods",{"_index":264,"title":{},"body":{"modules/GoodsModule.html":{}}}],["typeormmodule.forrootasync",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":86,"title":{"interfaces/TypeOrmModuleOptions.html":{}},"body":{"modules/AppModule.html":{},"interfaces/TypeOrmModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/response/error",{"_index":185,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/GoodsService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["types/response/response",{"_index":287,"title":{},"body":{"injectables/GoodsService.html":{},"injectables/ResponseService.html":{},"injectables/UserService.html":{}}}],["types/user/user",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["typescript",{"_index":755,"title":{},"body":{"index.html":{}}}],["ui",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":21,"title":{},"body":{"classes/AddGoodsDto.html":{},"entities/Admin.html":{},"entities/Guest.html":{}}}],["unique",{"_index":548,"title":{},"body":{"entities/UserProfile.html":{}}}],["unit",{"_index":767,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":217,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/ResponseService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":808,"title":{},"body":{"properties.html":{}}}],["up",{"_index":521,"title":{},"body":{"controllers/UserController.html":{}}}],["update",{"_index":211,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["update(@param('id",{"_index":253,"title":{},"body":{"controllers/GoodsController.html":{}}}],["update(id",{"_index":230,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["updateavatar",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar(client",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["updategooddto",{"_index":231,"title":{},"body":{"controllers/GoodsController.html":{},"injectables/GoodsService.html":{}}}],["updateusername",{"_index":457,"title":{},"body":{"controllers/UserController.html":{}}}],["updateusername(undefined",{"_index":479,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadavatar",{"_index":458,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadavatar(session",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadedfile",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["use",{"_index":358,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["use(req",{"_index":359,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["usefactory",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":488,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":517,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":389,"title":{},"body":{"entities/ReceivingAddress.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.base.entity",{"_index":46,"title":{},"body":{"entities/Admin.html":{},"entities/Guest.html":{}}}],["user.controller",{"_index":531,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":496,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["useravatarurl",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":449,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":344,"title":{},"body":{"injectables/JwtAuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userid}.jpg",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["userlogin",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["userlogin(userprofile",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":69,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TypeOrmModuleOptions.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["userprofile",{"_index":45,"title":{"entities/UserProfile.html":{}},"body":{"entities/Admin.html":{},"entities/Guest.html":{},"controllers/UserController.html":{},"entities/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userprofile.signtype",{"_index":519,"title":{},"body":{"controllers/UserController.html":{}}}],["userprofileinterface",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["userregister",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["userregister(userprofile",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":495,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":28,"title":{},"body":{"classes/AddGoodsDto.html":{},"classes/SignDto.html":{},"classes/addGuestDto.html":{},"dependencies.html":{}}}],["variable",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":809,"title":{"miscellaneous/variables.html":{}},"body":{}}],["verify",{"_index":347,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["verifyaccesstoken",{"_index":336,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["verifyaccesstoken(token",{"_index":345,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["verifyres",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["version",{"_index":806,"title":{},"body":{"properties.html":{}}}],["vip",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vip_guest",{"_index":738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"injectables/checkClientMiddleware.html":{}}}],["watch",{"_index":763,"title":{},"body":{"index.html":{}}}],["website",{"_index":792,"title":{},"body":{"index.html":{}}}],["world",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["writefilesync",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["writefilesync(join(avatarstorepath",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["you'd",{"_index":782,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddGoodsDto.html":{"url":"classes/AddGoodsDto.html","title":"class - AddGoodsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  AddGoodsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/goods/dto/goods.dto.ts\n        \n\n\n            \n                描述\n            \n            \n                商品数据批量入库\n\n            \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                G_category\n                            \n                            \n                                    Readonly\n                                G_info\n                            \n                            \n                                    Readonly\n                                G_price\n                            \n                            \n                                    Readonly\n                                G_stock\n                            \n                            \n                                    Readonly\n                                G_thumb\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        G_category\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/dto/goods.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        G_info\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/dto/goods.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        G_price\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         number\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/dto/goods.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        G_stock\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         number\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/dto/goods.dto.ts:29\n                        \n                    \n\n            \n                \n                    商品库存\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        G_thumb\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsUrl({protocols: undefined, require_protocol: true}, {message: '图片资源地址不合法'})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/dto/goods.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString, IsUrl } from 'class-validator';\n/**\n * 商品数据批量入库\n */\nexport class AddGoodsDto {\n  @IsString()\n  readonly G_category: string;\n\n  @IsUrl(\n    {\n      protocols: ['http', 'https'],\n      require_protocol: true,\n    },\n    {\n      message: '图片资源地址不合法',\n    },\n  )\n  readonly G_thumb: string;\n\n  @IsString()\n  readonly G_info: string;\n\n  @IsString()\n  readonly G_price: number;\n  /**\n   * 商品库存\n   */\n  @IsInt()\n  readonly G_stock: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"entities/Admin.html":{"url":"entities/Admin.html","title":"entity - Admin","body":"\n                   \n\n\n\n\n\n\n\n  实体\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/entities/admin.entity.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         AdminRole\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column({type: 'enum', enum: AdminRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/admin.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { AdminRole } from '../enums/role.enum';\nimport { UserProfile } from './user.base.entity';\n\n@Entity()\nexport class Admin extends UserProfile {\n  @Column({\n    type: 'enum',\n    enum: AdminRole,\n    default: AdminRole.ADMIN,\n  })\n  role: AdminRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    被定义在 src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    模块列表\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nGoodsModule\n\nGoodsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nGoodsModule->AppModule\n\n\n\n\n\nResponseModule\n\nResponseModule\n\nAppModule -->\n\nResponseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    引入\n                    \n                        \n                            GoodsModule\n                        \n                        \n                            ResponseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    被定义在 src/app.module.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  Module,\n  NestModule,\n  MiddlewareConsumer,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport dbConfig from './config/db.config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport TypeOrmModuleOptions from './config/interfaces/db.interface';\nimport { LoggerMiddleware } from './middlewares/logger.middleware';\nimport { checkClientMiddleware } from './middlewares/check-client.middleware';\nimport { GoodsModule } from './modules/goods/goods.module';\nimport { ResponseModule } from './modules/response/response-module';\nimport { UserModule } from './modules/user/user.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      //配置文件路径，也可以配置为数组如['/config/.env1','.env']。\n      envFilePath: '.env',\n      //忽略配置文件，为true则仅读取操作系统环境变量，常用于生产环境\n      ignoreEnvFile: false,\n      ignoreEnvVars: false,\n      //配置为全局可见，否则需要在每个模块中单独导入ConfigModule\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule.forFeature(dbConfig)],\n      inject: [ConfigService],\n      // 使用工厂模式，该方法return DB相关配置参数\n      useFactory: (_cfgSrv: ConfigService) => {\n        const cfg: TypeOrmModuleOptions = {\n          type: 'mysql',\n          host: _cfgSrv.get('db.host') || 'localhost',\n          port: _cfgSrv.get('db.port') || 3306,\n          username: 'root',\n          password: _cfgSrv.get('db.password') || 'root',\n          database: _cfgSrv.get('db.db') || 'piemall',\n          extra: {\n            connectionLimit: 100,\n          },\n          logging: true,\n          logger: 'file',\n          autoLoadEntities: true,\n          synchronize: process.env.NODE_ENV !== 'production',\n        };\n\n        return cfg;\n      },\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', process.env.SSD),\n    }),\n    GoodsModule,\n    UserModule,\n    ResponseModule,\n  ],\n  // controllers: [AppController],\n  // providers: [AppService],\n})\nexport class AppModule implements NestModule {\n  // MiddlewareConsumer: 中间件消费者，指从provider那里接收、处理、应用中间件的对象\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware, checkClientMiddleware).forRoutes({\n      path: '*',\n      method: RequestMethod.ALL, // 对所有类型的请求都应用LoggerMiddleware\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    被定义在 src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'H World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/role/role.controller.ts\n        \n\n            \n                字首\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    模块列表\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './role.service';\nimport { AuthController } from './role.controller';\n\n@Module({\n  providers: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/role/role.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/response/error/err-service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                被定义在 src/modules/response/error/err-service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        errInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    errInfo(errCode: number)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/response/error/err-service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    errCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _errorTypes\n                        \n                    \n                \n            \n                \n                    \n                        类型 :     Partial>\n\n                    \n                \n                \n                    \n                        缺省值 : {}\n                    \n                \n                    \n                        \n                                被定义在 src/modules/response/error/err-service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ERROR_TYPE } from '../../../../../types/response/error-type.enum';\n\n@Injectable()\nexport class ErrorService {\n  private _errorTypes: Partial> = {};\n  constructor() {\n    this._errorTypes[ERROR_TYPE.UNKNOW] = { message: '发生未知错误' };\n    this._errorTypes[ERROR_TYPE.NOT_FOUND] = { message: '无法找到指定的资源' };\n    this._errorTypes[ERROR_TYPE.UNAUTHORIZED] = { message: '没有指定权限' };\n    this._errorTypes[ERROR_TYPE.ALREADY_EXIST] = { message: '资源已存在' };\n  }\n  public errInfo(errCode: number): { message: string } {\n    return this._errorTypes[errCode];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"entities/Goods.html":{"url":"entities/Goods.html","title":"entity - Goods","body":"\n                   \n\n\n\n\n\n\n\n  实体\n  Goods\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/goods/entities/goods.entity.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                G_category\n                            \n                            \n                                G_id\n                            \n                            \n                                    可选的\n                                G_info\n                            \n                            \n                                G_price\n                            \n                            \n                                G_stock\n                            \n                            \n                                G_thumb\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                        G_category\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/entities/goods.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        G_id\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/entities/goods.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            可选的\n                        G_info\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/entities/goods.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        G_price\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         number\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/entities/goods.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        G_stock\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         number\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/entities/goods.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        G_thumb\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/goods/entities/goods.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Goods {\n  @PrimaryGeneratedColumn('uuid')\n  G_id: string;\n\n  @Column()\n  G_category: string;\n\n  @Column()\n  G_thumb: string;\n\n  @Column()\n  G_info?: string;\n\n  @Column()\n  G_price: number;\n\n  @Column()\n  G_stock: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/GoodsController.html":{"url":"controllers/GoodsController.html","title":"controller - GoodsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GoodsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/goods/goods.controller.ts\n        \n\n            \n                字首\n            \n            \n                goods\n            \n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addGoods\n                            \n                            \n                                deleteById\n                            \n                            \n                                deleteByIds\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addGoods\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGoods(AddGoodsPayload: Array | AddGoodsDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()@ApiOperation({summary: '商品数据批量入库'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/goods/goods.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    AddGoodsPayload\n                                    \n                                                Array | AddGoodsDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteById\n                        \n                    \n                \n            \n            \n                \ndeleteById(id: string)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    被定义在 src/modules/goods/goods.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteByIds\n                        \n                    \n                \n            \n            \n                \ndeleteByIds(delIds: Array)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 src/modules/goods/goods.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    delIds\n                                    \n                                            Array\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    被定义在 src/modules/goods/goods.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 src/modules/goods/goods.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateGoodDto: AddGoodsDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    被定义在 src/modules/goods/goods.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    updateGoodDto\n                                    \n                                                AddGoodsDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Get,\n  Param,\n  Patch,\n  Delete,\n} from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AddGoodsDto } from './dto/goods.dto';\nimport { GoodsService } from './goods.service';\n\n@Controller('goods')\n@ApiTags('goods')\nexport class GoodsController {\n  constructor(private readonly _goodsSrv: GoodsService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: '商品数据批量入库',\n  })\n  public async addGoods(\n    @Body() AddGoodsPayload: Array | AddGoodsDto,\n  ) {\n    return await this._goodsSrv.create(AddGoodsPayload);\n  }\n\n  @Get()\n  findAll() {\n    return this._goodsSrv.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this._goodsSrv.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateGoodDto: AddGoodsDto) {\n    return this._goodsSrv.update(id, updateGoodDto);\n  }\n\n  @Delete(':id')\n  deleteById(@Param('id') id: string) {\n    return this._goodsSrv.delete(id);\n  }\n\n  @Delete()\n  deleteByIds(@Body() delIds: Array) {\n    return this._goodsSrv.delete(delIds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/GoodsModule.html":{"url":"modules/GoodsModule.html","title":"module - GoodsModule","body":"\n                   \n\n\n\n\n    模块列表\n    GoodsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GoodsModule\n\n\n\ncluster_GoodsModule_providers\n\n\n\n\nGoodsService\n\nGoodsService\n\n\n\nGoodsModule\n\nGoodsModule\n\nGoodsModule -->\n\nGoodsService->GoodsModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/modules/goods/goods.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            GoodsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GoodsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GoodsService } from './goods.service';\nimport { GoodsController } from './goods.controller';\nimport { Goods } from './entities/goods.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Goods])],\n  providers: [GoodsService],\n  controllers: [GoodsController],\n})\nexport class GoodsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/GoodsService.html":{"url":"injectables/GoodsService.html","title":"injectable - GoodsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  GoodsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/goods/goods.service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(_goodsRepo: Repository, _responseSrv: ResponseService)\n                    \n                \n                        \n                            \n                                被定义在 src/modules/goods/goods.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        _goodsRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        _responseSrv\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(goodsEntities: Array | AddGoodsDto)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/goods/goods.service.ts:75\n                \n            \n\n\n            \n                \n                    商品上架/入库\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    goodsEntities\n                                    \n                                                Array | AddGoodsDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(ids: string | Array)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/goods/goods.service.ts:62\n                \n            \n\n\n            \n                \n                    删除商品\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/goods/goods.service.ts:22\n                \n            \n\n\n            \n                \n                    查询全部商品\n\n\n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/goods/goods.service.ts:35\n                \n            \n\n\n            \n                \n                    查询单个商品\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateGoodDto: AddGoodsDto)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/goods/goods.service.ts:49\n                \n            \n\n\n            \n                \n                    更新商品\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    updateGoodDto\n                                    \n                                                AddGoodsDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Goods } from './entities/goods.entity';\nimport { Repository } from 'typeorm';\nimport { ResponseService } from '../response/response-service';\nimport { ResponseBody } from '../../../../types/response/response-body.interface';\nimport { ERROR_TYPE } from '../../../../types/response/error-type.enum';\nimport { AddGoodsDto } from './dto/goods.dto';\n\n@Injectable()\nexport class GoodsService {\n  constructor(\n    @InjectRepository(Goods)\n    private readonly _goodsRepo: Repository,\n    private readonly _responseSrv: ResponseService,\n  ) {}\n\n  /**\n   * 查询全部商品\n   * @returns ResponseBody\n   */\n  findAll(): Promise> {\n    const tryExecution = async () => {\n      const allGoods = await this._goodsRepo.find();\n      return this._responseSrv.success({ allGoods });\n    };\n    return this._responseSrv.tryExecute(tryExecution);\n  }\n\n  /**\n   * 查询单个商品\n   * @param id\n   * @returns ResponseBody\n   */\n  findOne(id: string): Promise> {\n    const tryExecution = async () => {\n      const good = await this._goodsRepo.findOne(id);\n      return this._responseSrv.success({ good });\n    };\n    return this._responseSrv.tryExecute(tryExecution);\n  }\n\n  /**\n   * 更新商品\n   * @param id\n   * @param goodsData\n   * @returns ResponseBody\n   */\n  update(id: string, updateGoodDto: AddGoodsDto): Promise> {\n    const tryExecution = async () => {\n      await this._goodsRepo.update(id, updateGoodDto);\n      return this._responseSrv.success({});\n    };\n    return this._responseSrv.tryExecute(tryExecution);\n  }\n\n  /**\n   * 删除商品\n   * @param ids\n   * @returns ResponseBody\n   */\n  delete(ids: string | Array): Promise> {\n    const tryExecution = async () => {\n      await this._goodsRepo.delete(ids);\n      return this._responseSrv.success(null);\n    };\n    return this._responseSrv.tryExecute(tryExecution);\n  }\n\n  /**\n   * 商品上架/入库\n   * @param {Array | AddGoodsDto} goodsData\n   * @returns ResponseBody\n   */\n  public async create(\n    goodsEntities: Array | AddGoodsDto,\n  ): Promise> {\n    const tryExecution = async () => {\n      await this._goodsRepo.insert(goodsEntities);\n      return this._responseSrv.success(null);\n    };\n    return this._responseSrv.tryExecute(tryExecution);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"entities/Guest.html":{"url":"entities/Guest.html","title":"entity - Guest","body":"\n                   \n\n\n\n\n\n\n\n  实体\n  Guest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/entities/guest.entity.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                receiving_address\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                        receiving_address\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         ReceivingAddress[]\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @OneToMany(undefined, ReceivingAddress => ReceivingAddress.user)\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/guest.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         GuestRole\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column({type: 'enum', enum: GuestRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/guest.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany } from 'typeorm';\nimport { GuestRole } from '../enums/role.enum';\nimport { UserProfile } from './user.base.entity';\nimport { ReceivingAddress } from './guest-address.entity';\n@Entity()\nexport class Guest extends UserProfile {\n  @Column({\n    type: 'enum',\n    enum: GuestRole,\n    default: GuestRole.GUEST,\n  })\n  role: GuestRole;\n\n  // 收货地址\n  @OneToMany(() => ReceivingAddress, ReceivingAddress => ReceivingAddress.user)\n  receiving_address: ReceivingAddress[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/JwtAuthModule.html":{"url":"modules/JwtAuthModule.html","title":"module - JwtAuthModule","body":"\n                   \n\n\n\n\n    模块列表\n    JwtAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JwtAuthModule\n\n\n\ncluster_JwtAuthModule_providers\n\n\n\ncluster_JwtAuthModule_exports\n\n\n\n\nJwtAuthService \n\nJwtAuthService \n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\nJwtAuthService  -->\n\nJwtAuthModule->JwtAuthService \n\n\n\n\n\nJwtAuthService\n\nJwtAuthService\n\nJwtAuthModule -->\n\nJwtAuthService->JwtAuthModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/modules/jwt-auth/jwt-auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            JwtAuthService\n                        \n                    \n                \n                \n                    导出\n                    \n                        \n                            JwtAuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtAuthService } from './jwt-auth.service';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.secret || 'Sherlock',\n    }),\n  ],\n  providers: [JwtAuthService],\n  exports: [JwtAuthService],\n})\nexport class JwtAuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/JwtAuthService.html":{"url":"injectables/JwtAuthService.html","title":"injectable - JwtAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  JwtAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/jwt-auth/jwt-auth.service.ts\n        \n\n\n            \n                描述\n            \n            \n                基于@nestjs/jwt的登录认证服务\n主要包含登录 access_token / ticket 的签发行为\n\n            \n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signAccessToken\n                            \n                            \n                                    Async\n                                verifyAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(_jwtSrv: JwtService)\n                    \n                \n                        \n                            \n                                被定义在 src/modules/jwt-auth/jwt-auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        _jwtSrv\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signAccessToken(userId: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/jwt-auth/jwt-auth.service.ts:20\n                \n            \n\n\n            \n                \n                    签发 token\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyAccessToken(token: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/jwt-auth/jwt-auth.service.ts:30\n                \n            \n\n\n            \n                \n                    验证 token\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise\n\n                    \n                    \n                        when verify success, null when failed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as ms from 'ms';\n/**\n * 基于@nestjs/jwt的登录认证服务\n * 主要包含登录 access_token / ticket 的签发行为\n * @export\n * @class JwtAuthService\n */\n@Injectable()\nexport class JwtAuthService {\n  constructor(private readonly _jwtSrv: JwtService) {}\n\n  /**\n   * 签发 token\n   * @param {string} userId\n   * @returns {Promise}\n   * @memberof JwtAuthService\n   */\n  async signAccessToken(userId: string): Promise {\n    return this._jwtSrv.signAsync(userId);\n  }\n\n  /**\n   * 验证 token\n   * @param {string} token\n   * @returns {Promise} when verify success, null when failed\n   * @memberof JwtAuthService\n   */\n  async verifyAccessToken(token: string): Promise {\n    const res = this._jwtSrv.verifyAsync(token, {\n      ignoreExpiration: false,\n    });\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    被定义在 src/middlewares/logger.middleware.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { NestMiddleware } from '@nestjs/common';\nimport { NextFunction } from 'express';\nimport { Request } from 'express';\nimport * as chalk from 'chalk';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n    use(req: Request, res: Response, next: NextFunction) {\n        let log = '';\n        // IP info\n        let ip;\n        try {\n            ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n        } catch (err) { }\n        if (ip) log += chalk.yellow(`[${ip}]`);\n\n        // Method\n        const method = req.method;\n        if (method.toUpperCase() === 'GET') log += chalk.green(`[${method}]`);\n        else if (method.toUpperCase() === 'POST')\n            log += chalk.yellow(`[${method}]`);\n        else if (method.toUpperCase() === 'DELETE') log += chalk.red(`[${method}]`);\n        else log += chalk.cyan(`[${method}]`);\n\n        // path\n        log += `:${req.originalUrl}`;\n        console.log(log);\n        next();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"entities/ReceivingAddress.html":{"url":"entities/ReceivingAddress.html","title":"entity - ReceivingAddress","body":"\n                   \n\n\n\n\n\n\n\n  实体\n  ReceivingAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/entities/guest-address.entity.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/guest-address.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/guest-address.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         Guest\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @ManyToOne(undefined, Guest => Guest.receiving_address, {eager: true, cascade: true, onDelete: 'CASCADE', orphanedRowAction: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/guest-address.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Guest } from './guest.entity';\n\n@Entity()\nexport class ReceivingAddress {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  address: string;\n\n  @ManyToOne(() => Guest, Guest => Guest.receiving_address, {\n    eager: true,\n    cascade: true,\n    onDelete: 'CASCADE',\n    orphanedRowAction: 'delete',\n  })\n  user: Guest;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/ResponseModule.html":{"url":"modules/ResponseModule.html","title":"module - ResponseModule","body":"\n                   \n\n\n\n\n    模块列表\n    ResponseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResponseModule\n\n\n\ncluster_ResponseModule_exports\n\n\n\ncluster_ResponseModule_providers\n\n\n\n\nErrorService \n\nErrorService \n\n\n\nResponseService \n\nResponseService \n\n\n\nResponseModule\n\nResponseModule\n\nErrorService  -->\n\nResponseModule->ErrorService \n\n\n\nResponseService  -->\n\nResponseModule->ResponseService \n\n\n\n\n\nErrorService\n\nErrorService\n\nResponseModule -->\n\nErrorService->ResponseModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nResponseModule -->\n\nResponseService->ResponseModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/modules/response/response-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            ErrorService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    导出\n                    \n                        \n                            ErrorService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { ResponseService } from './response-service';\nimport { ErrorService } from './error/err-service';\n\n\n\n@Global()\n@Module({\n    providers: [ResponseService, ErrorService],\n    exports: [ResponseService, ErrorService],\n})\nexport class ResponseModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ResponseService.html":{"url":"injectables/ResponseService.html","title":"injectable - ResponseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  ResponseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/response/response-service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                    Async\n                                tryExecute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(_errSrv: ErrorService)\n                    \n                \n                        \n                            \n                                被定义在 src/modules/response/response-service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        _errSrv\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(errorCode: ERROR_TYPE, data: T, options?: literal type)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/response/response-service.ts:32\n                \n            \n\n            \n                \n                    类型参数 :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    请求失败的返回体\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    errorCode\n                                    \n                                            ERROR_TYPE\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        success\n                        \n                    \n                \n            \n            \n                \n                    \n                    success(data: T)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/response/response-service.ts:17\n                \n            \n\n            \n                \n                    类型参数 :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    请求成功\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     SuccessResponse\n\n                    \n                    \n                        , data, message }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        tryExecute\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryExecute(cb)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/response/response-service.ts:54\n                \n            \n\n\n            \n                \n                    简化【DB操作代码段】的工具函数\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                    描述\n                                \n                            \n                            \n                                \n                                    cb\n\n                                    \n                                        否\n                                    \n\n\n                                    \n                                        须try包裹的代码段\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        res = cb();\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ErrorResponse,\n  SuccessResponse,\n} from './../../../../types/response/response-body.interface';\nimport { Injectable } from '@nestjs/common';\nimport { ERROR_TYPE } from '../../../../types/response/error-type.enum';\nimport { ErrorService } from './error/err-service';\n\n@Injectable()\nexport class ResponseService {\n  constructor(private readonly _errSrv: ErrorService) {}\n  /**\n   * 请求成功\n   * @param {T} data\n   * @returns { status, data, message }\n   */\n  public success(data: T): SuccessResponse {\n    return {\n      status: 0,\n      message: 'success',\n      data,\n    };\n  }\n\n  /**\n   * 请求失败的返回体\n   * @param errorCode\n   * @param data\n   * @param options\n   * @returns\n   */\n  public error(\n    errorCode: ERROR_TYPE,\n    data: T,\n    options?: {\n      detail?: string;\n    },\n  ): ErrorResponse {\n    const error = this._errSrv.errInfo(errorCode);\n    return {\n      data,\n      status: errorCode,\n      error: error.message,\n      detail: options?.detail,\n      ...error,\n    };\n  }\n\n  /**\n   * 简化【DB操作代码段】的工具函数\n   * @param cb 须try包裹的代码段\n   * @returns res = cb();\n   */\n  public async tryExecute(cb) {\n    try {\n      return cb();\n    } catch (err) {\n      console.log(err.toString());\n      return this.error(ERROR_TYPE.UNKNOW, err, {\n        detail: err.toString(),\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/SignDto.html":{"url":"classes/SignDto.html","title":"class - SignDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  SignDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/dto/sign.dto.ts\n        \n\n\n            \n                描述\n            \n            \n                用户登录/注册 DTO\n\n            \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                account\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                signType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/sign.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/sign.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        signType\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/sign.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n/**\n * 用户登录/注册 DTO\n */\nexport class SignDto {\n  @IsString()\n  readonly account: string;\n\n  @IsString()\n  readonly password: string;\n\n  @IsString()\n  readonly signType: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/TypeOrmModuleOptions.html":{"url":"interfaces/TypeOrmModuleOptions.html","title":"interface - TypeOrmModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  \n  TypeOrmModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/config/interfaces/db.interface.ts\n        \n\n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:        any\n\n                    \n                \n                        \n                            \n                                被定义在 src/config/interfaces/db.interface.ts:6\n                            \n                        \n            \n        \n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface TypeOrmModuleOptions {\n    host: string;\n    port: number;\n    username: string;\n    password: string;\n    database: string;\n    [propName: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                字首\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addGuest\n                            \n                            \n                                    Public\n                                    Async\n                                deleteGuests\n                            \n                            \n                                    Public\n                                    Async\n                                getGuests\n                            \n                            \n                                    Public\n                                    Async\n                                getUserProfile\n                            \n                            \n                                    Public\n                                    Async\n                                signOut\n                            \n                            \n                                    Public\n                                    Async\n                                signUser\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserName\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addGuest\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGuest(undefined: literal type)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('guest')@ApiOperation({summary: '后台添加app用户'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteGuests\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGuests(undefined: literal type)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete('guests')@ApiOperation({summary: '注销app用户'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getGuests\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGuests()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('guests')@ApiOperation({summary: '获取所有app用户信息'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(token: string, session: Record)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get()@ApiOperation({summary: '校验ticket并获取userProfile'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(token: string, session: Record)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete('userSession')@ApiOperation({summary: '用户退出登录，删除用户会话状态'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUser(userProfile: SignDto, session: Record)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()@ApiOperation({summary: '用户登录/注册'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                SignDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserName\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserName(undefined: literal type, session: Record)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('name')@ApiOperation({summary: '修改用户昵称'})\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(session: Record, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('avatar')@ApiBody({description: 'user avatar'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    被定义在 src/modules/user/user.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Get,\n  Headers,\n  Session,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n} from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { SignDto } from './dto/sign.dto';\nimport { addGuestDto } from './dto/add-guest.dto';\nimport { UserService } from './user.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly _userSrv: UserService) {}\n\n  @Post('guest')\n  @ApiOperation({\n    summary: '后台添加app用户',\n  })\n  public async addGuest(@Body() { userProfile }: { userProfile: addGuestDto }) {\n    return await this._userSrv.addGuest(userProfile);\n  }\n\n  @Delete('guests')\n  @ApiOperation({\n    summary: '注销app用户',\n  })\n  public async deleteGuests(@Body() { ids }: { ids: string[] }) {\n    return await this._userSrv.deleteGuestsByIds(ids);\n  }\n\n  @Get('guests')\n  @ApiOperation({\n    summary: '获取所有app用户信息',\n  })\n  public async getGuests() {\n    return await this._userSrv.getProfilesOfGuests();\n  }\n\n  @Post('name')\n  @ApiOperation({\n    summary: '修改用户昵称',\n  })\n  public async updateUserName(\n    @Body() { userName }: { userName: string },\n    @Session() session: Record,\n  ) {\n    return await this._userSrv.setUserName(\n      session.client,\n      userName,\n      session.userId,\n    );\n  }\n\n  @Post('avatar')\n  @ApiBody({\n    description: 'user avatar',\n  })\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadAvatar(\n    @Session() session: Record,\n    @UploadedFile() file: Express.Multer.File,\n  ) {\n    return await this._userSrv.updateAvatar(\n      session.client,\n      file,\n      session.userId,\n    );\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: '用户登录/注册',\n  })\n  public async signUser(\n    @Body() userProfile: SignDto,\n    @Session() session: Record,\n  ) {\n    // 登录\n    if (userProfile.signType === 'in') {\n      return await this._userSrv.userLogin(userProfile, session);\n    }\n    // 注册\n    if (userProfile.signType === 'up') {\n      return await this._userSrv.userRegister(userProfile, session.client);\n    }\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: '校验ticket并获取userProfile',\n  })\n  public async getUserProfile(\n    @Headers('userTicket') token: string,\n    @Session() session: Record,\n  ) {\n    const { userId } = session;\n    return await this._userSrv.getUserProfile(token, userId);\n  }\n\n  @Delete('userSession')\n  @ApiOperation({\n    summary: '用户退出登录，删除用户会话状态',\n  })\n  public async signOut(\n    @Headers('userTicket') token: string,\n    @Session() session: Record,\n  ) {\n    return await this._userSrv.deleteUserSession(token, session);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    模块列表\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nJwtAuthModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    引入\n                    \n                        \n                            JwtAuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { Admin } from './entities/admin.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtAuthModule } from '../jwt-auth/jwt-auth.module';\nimport { Guest } from './entities/guest.entity';\nimport { ReceivingAddress } from './entities/guest-address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Admin, Guest, ReceivingAddress]),\n    JwtAuthModule,\n  ], // 还未引入Guest\n  providers: [UserService],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"entities/UserProfile.html":{"url":"entities/UserProfile.html","title":"entity - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n  实体\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/entities/user.base.entity.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                avatar\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/user.base.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/user.base.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/user.base.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/user.base.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/entities/user.base.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport abstract class UserProfile {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name: string;\n\n  @Column({ unique: true })\n  account: string;\n\n  @Column()\n  password: string;\n\n  @Column({ nullable: true })\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addGuest\n                            \n                            \n                                    Public\n                                    Async\n                                addUser\n                            \n                            \n                                deleteGuestsByIds\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUserSession\n                            \n                            \n                                    Async\n                                getProfilesOfGuests\n                            \n                            \n                                    Public\n                                    Async\n                                getUserProfile\n                            \n                            \n                                    Public\n                                    Async\n                                getUserProfileById\n                            \n                            \n                                    Public\n                                    Async\n                                setUserName\n                            \n                            \n                                    Public\n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Public\n                                    Async\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(_adminRepo: Repository, __guestRepo: Repository, __guestAddressRepo: Repository, _responseSrv: ResponseService, _jwtSrv: JwtAuthService)\n                    \n                \n                        \n                            \n                                被定义在 src/modules/user/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        _adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        __guestRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        __guestAddressRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        _responseSrv\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        _jwtSrv\n                                                  \n                                                        \n                                                                        JwtAuthService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addGuest\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGuest(userProfile: Partial)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:35\n                \n            \n\n\n            \n                \n                    后台添加app端用户\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userProfile: Partial, repo: Repository)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:62\n                \n            \n\n\n            \n                \n                    向指定user表添加一个用户的工具方法\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                            Repository\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        row | false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGuestsByIds\n                        \n                    \n                \n            \n            \n                \ndeleteGuestsByIds(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:81\n                \n            \n\n\n            \n                \n                    批量注销app端用户\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteUserSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserSession(token: string, session: Record)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:285\n                \n            \n\n\n            \n                \n                    删除user session\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesOfGuests\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesOfGuests()\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:94\n                \n            \n\n\n            \n                \n                    获取app端全部用户信息\n\n\n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        guestArray\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:180\n                \n            \n\n\n            \n                \n                    校验ticket并获取userProfile\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUserProfileById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfileById(userId: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         Promise\n\n                    \n                    \n                        userProfile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setUserName\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserName(client: string, name: string, userId: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:117\n                \n            \n\n\n            \n                \n                    更新用户名称\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(client: string, file: Express.Multer.File, userId: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:138\n                \n            \n\n\n            \n                \n                    更新用户头像\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userProfile: SignDto, session: Record)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:227\n                \n            \n\n\n            \n                \n                    登录\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                SignDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                            Record\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userRegister\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(userProfile: SignDto, client: string)\n                \n            \n\n\n            \n                \n                    被定义在 src/modules/user/user.service.ts:259\n                \n            \n\n\n            \n                \n                    注册\n\n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                SignDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     Promise>\n\n                    \n                    \n                        ResponseBody\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Admin } from './entities/admin.entity';\n// import { Guest } from './entities/guest.entity';\nimport { Repository } from 'typeorm';\nimport { ResponseService } from '../response/response-service';\nimport { ResponseBody } from '../../../../types/response/response-body.interface';\nimport { ERROR_TYPE } from '../../../../types/response/error-type.enum';\nimport { SignDto } from './dto/sign.dto';\nimport { JwtAuthService } from '../jwt-auth/jwt-auth.service';\nimport { UserProfileInterface } from '../../../../types/user/user-profile.interface';\nimport { existsSync, mkdirSync, writeFileSync } from 'fs';\nimport { join } from 'path';\nimport { Guest } from './entities/guest.entity';\nimport { ReceivingAddress } from './entities/guest-address.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(Admin)\n    private readonly _adminRepo: Repository,\n    @InjectRepository(Guest)\n    private readonly __guestRepo: Repository,\n    @InjectRepository(ReceivingAddress)\n    private readonly __guestAddressRepo: Repository,\n    private readonly _responseSrv: ResponseService,\n    private readonly _jwtSrv: JwtAuthService,\n  ) {}\n\n  /**\n   * 后台添加app端用户\n   * @param userProfile\n   * @returns\n   */\n  public async addGuest(userProfile: Partial) {\n    return this._responseSrv.tryExecute(async () => {\n      const guest = await this.addUser(userProfile, this.__guestRepo);\n      // 账号已存在\n      if (!guest) {\n        return this._responseSrv.error(ERROR_TYPE.ALREADY_EXIST, null);\n      }\n      const { address } = userProfile;\n      // userId 作为地址表的外键\n      const exeResult = await this.__guestAddressRepo.insert({\n        address,\n        user: guest,\n      });\n      if (!exeResult) {\n        return this._responseSrv.error(ERROR_TYPE.UNKNOW, null);\n      }\n      // 添加账户成功\n      return this._responseSrv.success({});\n    });\n  }\n\n  /**\n   * 向指定user表添加一个用户的工具方法\n   * @param userProfile\n   * @param repo\n   * @returns row | false\n   */\n  public async addUser(\n    userProfile: Partial,\n    repo: Repository,\n  ) {\n    const { account } = userProfile;\n    const user = await repo.findOne({ account });\n    // 账号已存在\n    if (user) {\n      return false;\n    }\n    // 添加账户成功\n    return await repo.save(userProfile);\n  }\n\n  /**\n   * 批量注销app端用户\n   * @param ids\n   * @returns\n   */\n  deleteGuestsByIds(ids: string[]) {\n    return this._responseSrv.tryExecute(async () => {\n      console.log(ids);\n      const exeResult = await this.__guestRepo.delete(ids);\n      console.log(exeResult);\n      return this._responseSrv.success({});\n    });\n  }\n\n  /**\n   * 获取app端全部用户信息\n   * @returns guestArray\n   */\n  async getProfilesOfGuests() {\n    return this._responseSrv.tryExecute(async () => {\n      const guests = await this.__guestRepo.find({\n        select: ['id', 'account', 'name', 'role'],\n        relations: ['receiving_address'],\n      });\n      const processAddressGuests = guests.map(guest => ({\n        ...guest,\n        receiving_address: guest.receiving_address.map(addressRow => ({\n          address_id: addressRow.id,\n          address: addressRow.address,\n        })),\n      }));\n      return this._responseSrv.success({ guests: processAddressGuests });\n    });\n  }\n\n  /**\n   * 更新用户名称\n   * @param client\n   * @param name\n   * @param userId\n   */\n  public async setUserName(client: string, name: string, userId: string) {\n    const _userRepo = {\n      [process.env.PIEMALL_APP]: '_appUserRepo',\n      [process.env.PIEMALL_ADMIN]: '_adminRepo',\n    }[client];\n\n    return this._responseSrv.tryExecute(async () => {\n      await this[_userRepo].update(userId, {\n        name: name,\n      });\n      return this._responseSrv.success({});\n    });\n  }\n\n  /**\n   * 更新用户头像\n   * @param client\n   * @param file\n   * @param userId\n   * @returns\n   */\n  public async updateAvatar(\n    client: string,\n    file: Express.Multer.File,\n    userId: string,\n  ): Promise> {\n    const staticSrvDir = process.env.SSD; // 静态服务存储目录\n    const serviceRort = process.env.PIEMALL_SERVICE_PORT;\n    const avatarFileName = `${userId}.jpg`;\n    /**\n     * project-path\\dist\\service\\public\\upload\\user-avatar\n     */\n    const avatarStorePath = join(\n      __dirname,\n      '../../../',\n      staticSrvDir,\n      '/user-avatar',\n    );\n    return this._responseSrv.tryExecute(async () => {\n      // 创建静态资源存储服务路径(文件夹)\n      if (!existsSync(avatarStorePath))\n        mkdirSync(avatarStorePath, { recursive: true }); // 递归参数，否则只能建一层\n      // 存储图片到静态服务目录\n      writeFileSync(join(avatarStorePath, avatarFileName), file.buffer);\n      // 写入图片存储路径到DB(userProfile)\n      const _userRepo = {\n        [process.env.PIEMALL_APP]: '_appUserRepo',\n        [process.env.PIEMALL_ADMIN]: '_adminRepo',\n      }[client];\n      const userAvatarUrl = `http://localhost:${serviceRort}/user-avatar/${avatarFileName}`;\n      await this[_userRepo].update(userId, {\n        avatar: userAvatarUrl,\n      });\n      return this._responseSrv.success({ userAvatarUrl });\n    });\n  }\n\n  /**\n   * 校验ticket并获取userProfile\n   * @param token\n   * @param userId\n   * @returns\n   */\n  public async getUserProfile(\n    token: string,\n    userId: string,\n  ): Promise> {\n    return this._responseSrv.tryExecute(async () => {\n      // 验证session，只有二次登录，session中才有该字段\n      if (!userId) {\n        return this._responseSrv.error(ERROR_TYPE.NOT_FOUND, {\n          detail: '身份认证失败, 您没有权限执行此操作',\n        });\n      }\n      // 1. 验证token\n      const verifyRes = await this._jwtSrv.verifyAccessToken(token);\n\n      if (!verifyRes) {\n        return this._responseSrv.error(ERROR_TYPE.NOT_FOUND, {\n          detail: '身份认证失败, 您没有权限执行此操作',\n        });\n      }\n      // 通过身份认证校验\n      const userProfile = await this.getUserProfileById(userId);\n      if (!userProfile) {\n        return this._responseSrv.error(ERROR_TYPE.NOT_FOUND, null);\n      }\n      return this._responseSrv.success(userProfile);\n    });\n  }\n  /**\n   *\n   * @param userId\n   * @returns userProfile\n   */\n  public async getUserProfileById(\n    userId: string,\n    // project: 'B' | 'C',\n  ): Promise {\n    // return project === 'B'\n    //   ? this._adminRepo.findOne({ id: userId })\n    //   : this.__guestRepo.findOne({ id: userId });\n    return await this._adminRepo.findOne({ id: userId });\n  }\n\n  /**\n   * 登录\n   * @param {SignAdminDto} userProfile\n   * @returns ResponseBody\n   */\n  public async userLogin(\n    userProfile: SignDto,\n    session: Record,\n  ): Promise> {\n    const { account, password } = userProfile;\n    return this._responseSrv.tryExecute(async () => {\n      const _userRepo = {\n        [process.env.PIEMALL_APP]: '_guestRepo',\n        [process.env.PIEMALL_ADMIN]: '_adminRepo',\n      }[session.client];\n      const user = await this[_userRepo].findOne({\n        account,\n        password,\n      });\n      if (!user) {\n        return this._responseSrv.error(ERROR_TYPE.NOT_FOUND, null);\n      }\n      const { name, id } = user;\n      session.userId = id;\n      const access_token = await this._jwtSrv.signAccessToken(id);\n      return this._responseSrv.success({\n        userProfile: { name },\n        access_token,\n      });\n    });\n  }\n\n  /**\n   * 注册\n   * @param {SignAdminDto} userProfile\n   * @returns ResponseBody\n   */\n  public userRegister(\n    userProfile: SignDto,\n    client: string,\n  ): Promise> {\n    return this._responseSrv.tryExecute(() => {\n      const _userRepo = {\n        [process.env.PIEMALL_APP]: this.__guestRepo,\n        [process.env.PIEMALL_ADMIN]: this._adminRepo,\n      }[client];\n      _userRepo;\n      const exeResult = this.addUser(userProfile, _userRepo);\n      // 账号已存在\n      if (!exeResult) {\n        return this._responseSrv.error(ERROR_TYPE.ALREADY_EXIST, null);\n      }\n      // 添加账户成功\n      return this._responseSrv.success({ userProfile: exeResult });\n    });\n  }\n\n  /**\n   * 删除user session\n   * @param token\n   * @param session\n   * @returns ResponseBody\n   */\n  public async deleteUserSession(\n    token: string,\n    session: Record,\n  ): Promise> {\n    return this._responseSrv.tryExecute(async () => {\n      session.destroy();\n      return this._responseSrv.success({});\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/addGuestDto.html":{"url":"classes/addGuestDto.html","title":"class - addGuestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  addGuestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/modules/user/dto/add-guest.dto.ts\n        \n\n\n            \n                描述\n            \n            \n                后台添加用户DTO\n\n            \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                address\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        属性列表\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/add-guest.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/add-guest.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/add-guest.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/add-guest.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         string\n\n                    \n                \n                \n                    \n                        装饰器列表 : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                被定义在 src/modules/user/dto/add-guest.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\n/**\n * 后台添加用户DTO\n */\nexport class addGuestDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  role: string;\n\n  @IsString()\n  account: string;\n\n  @IsString()\n  password: string;\n\n  @IsString()\n  address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/checkClientMiddleware.html":{"url":"injectables/checkClientMiddleware.html","title":"injectable - checkClientMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  可注入的\n  checkClientMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/middlewares/check-client.middleware.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    被定义在 src/middlewares/check-client.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { NestMiddleware } from '@nestjs/common';\nimport { NextFunction } from 'express';\n\n@Injectable()\nexport class checkClientMiddleware implements NestMiddleware {\n  use(req: any, res: Response, next: NextFunction) {\n    const ori = req.get('origin');\n    if (ori === process.env.PIEMALL_APP_Ori) {\n      req.session.client = process.env.PIEMALL_APP;\n    }\n    if (ori === process.env.PIEMALL_ADMIN_Ori) {\n      req.session.client = process.env.PIEMALL_ADMIN;\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/db.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/interfaces/db.interface.ts\n            \n            interface\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/check-client.middleware.ts\n            \n            injectable\n            checkClientMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/goods/dto/goods.dto.ts\n            \n            class\n            AddGoodsDto\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/modules/goods/entities/goods.entity.ts\n            \n            entity\n            Goods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/goods/goods.controller.ts\n            \n            controller\n            GoodsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/goods/goods.service.ts\n            \n            injectable\n            GoodsService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/modules/jwt-auth/jwt-auth.service.ts\n            \n            injectable\n            JwtAuthService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/response/error/err-service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/response/response-service.ts\n            \n            injectable\n            ResponseService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/modules/role/role.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/role.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/dto/add-guest.dto.ts\n            \n            class\n            addGuestDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/modules/user/dto/sign.dto.ts\n            \n            class\n            SignDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/user/entities/admin.entity.ts\n            \n            entity\n            Admin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/entities/guest-address.entity.ts\n            \n            entity\n            ReceivingAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/entities/guest.entity.ts\n            \n            entity\n            Guest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/entities/user.base.entity.ts\n            \n            entity\n            UserProfile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                76 %\n                (10/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        依赖项\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : ^2.2.2\n        \n            @nestjs/swagger : ^5.0.9\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^14.2.0\n        \n            express-session : ^1.17.2\n        \n            ms : ^2.1.3\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  列举\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            AdminRole   (src/.../role.enum.ts)\n                        \n                        \n                            GuestRole   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/user/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AdminRole\n                    \n                \n                    \n                        \n                            B端管理员角色类型\n\n                        \n                    \n                        \n                            \n                                 SUPER_USER\n                            \n                        \n                        \n                            \n                                值 : super_user\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                值 : admin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GuestRole\n                    \n                \n                    \n                        \n                            C端用户角色类型\n\n                        \n                    \n                        \n                            \n                                 VIP_GUEST\n                            \n                        \n                        \n                            \n                                值 : vip\n                            \n                        \n                        \n                            \n                                 GUEST\n                            \n                        \n                        \n                            \n                                值 : guest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  函数\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        GoodsModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtAuthModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResponseModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GoodsModule\n\n\n\ncluster_GoodsModule_providers\n\n\n\ncluster_JwtAuthModule\n\n\n\ncluster_JwtAuthModule_exports\n\n\n\ncluster_JwtAuthModule_providers\n\n\n\ncluster_ResponseModule\n\n\n\ncluster_ResponseModule_exports\n\n\n\ncluster_ResponseModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nGoodsModule\n\nGoodsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nGoodsModule->AppModule\n\n\n\n\n\nResponseModule\n\nResponseModule\n\nAppModule -->\n\nResponseModule->AppModule\n\n\n\n\n\nErrorService \n\nErrorService \n\nErrorService  -->\n\nResponseModule->ErrorService \n\n\n\n\n\nResponseService \n\nResponseService \n\nResponseService  -->\n\nResponseModule->ResponseService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoodsService\n\nGoodsService\n\nGoodsModule -->\n\nGoodsService->GoodsModule\n\n\n\n\n\nJwtAuthService \n\nJwtAuthService \n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\nUserModule -->\n\nJwtAuthModule->UserModule\n\n\n\nJwtAuthService  -->\n\nJwtAuthModule->JwtAuthService \n\n\n\n\n\nJwtAuthService\n\nJwtAuthService\n\nJwtAuthModule -->\n\nJwtAuthService->JwtAuthModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nResponseModule -->\n\nErrorService->ResponseModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nResponseModule -->\n\nResponseService->ResponseModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 模块列表\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 实体\n                \n            \n        \n        \n            \n                \n                    \n                    9 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    3 类列表\n                \n            \n        \n        \n            \n                \n                    \n                    1 接口\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        属性列表\n    \n    \n        \n            Version : 0.0.1\n        \n            License : UNLICENSED\n    \n\n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            dbConfig   (src/.../db.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dbConfig\n                        \n                    \n                \n            \n                \n                    \n                        类型 :         TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        缺省值 : {\n    host: process.env.HOST,\n    port: parseInt(process.env.PORT, 10),\n    username: process.env.USERNAME,\n    password: process.env.PASSWORD,\n    database: process.env.DB,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         匹配的结果 \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
